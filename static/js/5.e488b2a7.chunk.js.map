{"version":3,"sources":["conponent/load.js","hoc/withAuthRedirect.js","conponent/pic/loaD.svg","conponent/FormsControll/FormsControll.js","Header/Logo.jsx","Header/MenuB.js","Header/MenuHeader.js","utils/validator/validator.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Content/Profile/Profile/ProfileInfo/ProfileComponent/ProfileStatus.js","Content/Profile/Profile/ProfileInfo/ProFileInfo.js","Content/Profile/Profile/ProfilePost/AddPostForm.js","Content/Profile/Profile/ProfilePost/ListPost.js","user-selector/ProfileSelector.js","Content/Profile/ProfileCont.jsx"],"names":["LoAd","src","loaD","alt","StateTo","state","LoginReducer","withAuthRedirect","Component","RediComp","this","props","userEntry","status","to","React","connect","module","exports","Input","input","meta","value","error","touched","className","Textarea","errore","wrap","rows","Logo","compose","Exit","onClick","MenuHeader","min","required","maxLengthCreator","maxLength","length","undefined","minLengthCreator","minLength","email","zzzz","test","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","_s","_i","next","done","push","err","TypeError","Status","memo","useState","editMod","SetEditMod","SetStatus","useEffect","id","user","onDoubleClick","onChange","currentTarget","autoFocus","onBlur","sendStatus","deactivateEditMod","ProFileInfo","pic","abovMe","fullName","name","lastName","location","city","country","profilePage","picture","width","height","minLength2","maxLength20","AddPostForm","onSubmit","handleSubmit","Field","component","validate","placeholder","ReduxPostForm","reduxForm","form","ListPost","Post","post","map","propsProfile","propsLogin","WWW","getProfile","ProfileReducer","profile","getPost","setLoading","loading","ProfileCont","UserId","ProfileId","parseInt","match","params","userID","formData","SendPost","document","getElementById","setInterval","setState","time","Date","now","GetProfile","GetPost","console","log","Cookies","set","clearInterval","interval","prevProps","prevState","snapshot","SendStatus","PureComponent","withRouter"],"mappings":"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","file":"static/js/5.e488b2a7.chunk.js","sourcesContent":["import loaD from \"./pic/loaD.svg\";\r\nimport React from \"react\";\r\n\r\nlet LoAd=()=>{ return  <img src={loaD}  alt={'PIC'} />   }\r\nexport default LoAd;","import React from 'react'\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet StateTo=(state)=>({ state: state.LoginReducer });\r\n\r\nexport const withAuthRedirect=(Component)=>{\r\n\r\n    class RediComp extends React.Component{\r\n\r\n        render() {\r\n                return (\r\n                        this.props.state.userEntry.status\r\n                        ? <Component {...this.props} />\r\n                        : <Redirect to={`/` }/>\r\n                        )\r\n        }\r\n    }\r\n    let ConnectedAuth= connect(StateTo)(RediComp);\r\n\r\n    return ConnectedAuth\r\n};\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/loaD.a4b3162e.svg\";","import React from 'react'\r\nimport \"./style.css\"\r\n\r\nexport const Input=({input, meta,value,...props})=>{\r\n    const error=meta.touched && meta.error ;\r\n    return(\r\n        <div >\r\n            <div>\r\n                <input {...input} {...props} className={error && \"formControl\"} />\r\n            </div>\r\n            {error && <span className={'formSpan'} >{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea=({input,meta,...props})=>{\r\n    const errore=meta.touched && meta.error ;\r\n    return(\r\n        <div >\r\n            <div className={errore && \"formControl\"}>\r\n                <textarea {...input} {...props} wrap=\"soft\" rows={'1'}/>\r\n            </div>\r\n            {errore && <span>{errore}</span>}\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport '../style/App.css';\r\nfunction Logo() {\r\n\treturn <div className={'LOGO_PIC'} >\r\n\t\t\t      СИИИЛЬНО\r\n\t       </div>\r\n\r\n}\r\nexport default Logo","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {Exit} from \"../Content/Login/LoginReducer\";\r\n\r\nlet Menu=(props)=>{\r\n    function exit() {\r\n       props.Exit()\r\n    }\r\n    return(\r\n            <div className=\"HEADER_AN_PAGE\">\r\n\r\n                <div><NavLink to='/profile' className=\"Button_item\">Моя Страница </NavLink></div>\r\n                <div><NavLink to=\"/message\"  className=\"Button_item\">Сообщения </NavLink></div>\r\n                <div><NavLink to='/subscribers' className=\"Button_item\">Пользователи </NavLink></div>\r\n                <div><button onClick={exit} >Exit</button></div>\r\n\r\n            </div>\r\n          )\r\n}\r\nconst mapStateTo=(state)=>({state: state.LoginReducer,});\r\nexport default compose(\r\n    connect(mapStateTo, {Exit}\r\n    )\r\n)(Menu)","import Logo from \"./Logo\";\r\nimport Menu from \"./MenuB\";\r\nimport React from \"react\";\r\n\r\nlet MenuHeader=()=>{\r\n    return  <div>\r\n                    <Logo />\r\n                    <Menu />\r\n            </div>\r\n\r\n}\r\nexport default MenuHeader","//Это проверка, совпадает ли введеное пользователлем с требованиям к \"логину и паролю\"\r\n\r\n//проверка---это поле является обязательны после\r\n// клика он запоминает, при уходе он проверит заполнили ли вы его\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const required=(value)=>{\r\n    if(value) return undefined\r\n    return 'Field is required'\r\n};\r\n\r\n//Это устанавливает проверку на максимальную длину записанного\r\nexport const maxLengthCreator=(maxLength)=>(value)=>{ return(\r\n        value && value.length > maxLength\r\n            ? `Max length is ${maxLength} symbols`\r\n            : undefined\r\n)\r\n};\r\n\r\n//Это устанавливает проверку на минимальную длину записанного\r\nexport const minLengthCreator=(minLength)=>(value)=>{ return(\r\n    value && value.length < minLength ? `Min length is ${minLength} symbols`: undefined\r\n)\r\n};\r\n\r\n//Провека. Число ли это?\r\nconst number = (value) =>\r\n    value && isNaN(Number(value)) ? 'Must be a number' : undefined\r\n\r\n\r\n// меньше ли чем минимальное значение\r\nconst minValue = min => value =>\r\n    value && value < min ? `Must be at least ${min}` : undefined\r\nconst minValue13 = minValue(13)\r\n\r\n//проверка на правильность заполнения МЫЛА\r\nexport const email =(zzzz)=> (value) => {\r\n    debugger\r\n    return(\r\n         value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n        ? 'Invalid email address'\r\n        : !zzzz.status?<span>Пароль или логин не правильный</span>:undefined\r\n)\r\n\r\n};\r\n\r\n// меньше чем допустимый вызраст\r\nconst tooYoung = value =>\r\n    value && value < 13\r\n        ? 'You do not meet the minimum age requirement!'\r\n        : undefined\r\n\r\n// меньше чем допустимый вызраст\r\nconst aol = value =>\r\n    value && /.+@aol\\.com/.test(value)\r\n        ? 'Really? You still use AOL for your email?'\r\n        : undefined\r\n\r\n\r\n// Только арифметические знаки\r\nconst alphaNumeric = value =>\r\n    value && /[^a-zA-Z0-9 ]/i.test(value)\r\n        ? 'Only alphanumeric characters'\r\n        : undefined\r\n\r\n// номер телефона 10 символов\r\nexport const phoneNumber = value =>\r\n    value && !/^(0|[1-9][0-9]{9})$/i.test(value)\r\n        ? 'Invalid phone number, must be 10 digits'\r\n        : undefined\r\n\r\nlet r={number,minValue13,email,tooYoung,aol,alphaNumeric,phoneNumber}\r\n\r\n\r\n\r\nconst mapStateTo=(state)=>({\r\n    userEntry: state.LoginReducer.userEntry\r\n});\r\nexport default compose( connect(mapStateTo, null))(email)\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, {useEffect, useState} from 'react';\r\n\r\nlet Status=React.memo(props=>{\r\n    let [editMod,SetEditMod]=useState(false);\r\n    let [status,SetStatus]=useState(props.status!==''?props.status:'');\r\n\r\n    useEffect(()=>{\r\n        SetStatus(props.status);},[props.status]\r\n    )\r\n\r\n    let activateEditMod=()=>{\r\n        SetEditMod(true);\r\n    };\r\n    let deactivateEditMod=(status)=>{\r\n        SetEditMod(true);\r\n        props.sendStatus(status)\r\n    };\r\n    let EditMod=(status)=>{\r\n        SetStatus(status.currentTarget.value)\r\n    };\r\n\r\n        return <div>\r\n                {\r\n                  props.id===props.user\r\n                  ?<div>\r\n                      {\r\n                          !editMod &&\r\n                          <span onDoubleClick={activateEditMod}>\r\n                              {props.id === props.user ? status : props.status || \"Your Status\"}\r\n                          </span>\r\n                      }\r\n                      {\r\n                          editMod &&\r\n                          <input id={'inputStatus'}\r\n                                 onChange={EditMod}\r\n                                 autoFocus={true}\r\n                                 onBlur={() => {deactivateEditMod(status)}}\r\n                                 value={status}\r\n                          />\r\n                      }\r\n                  </div>\r\n\r\n                  :<div>\r\n                          <span>\r\n                              {props.status}\r\n                          </span>\r\n                   </div>\r\n                }\r\n               </div>\r\n});\r\nexport default Status\r\n//      forceUpdate()--------------принудительно обновить state","import React from 'react';\r\nimport LoAd from \"../../../../conponent/load\";\r\nimport Status from \"./ProfileComponent/ProfileStatus\";\r\n\r\nconst ProFileInfo=React.memo(props=>{\r\n    let pic,abovMe;\r\n    abovMe= {\r\n        fullName:{name:'',lastName:''}\r\n        ,location:{city:'', country:''}\r\n        ,status:''\r\n    };\r\n     if (props.profilePage.length!==0) {\r\n         pic=props.profilePage.picture ;\r\n         abovMe= {\r\n              fullName:props.profilePage.fullName\r\n             ,location:props.profilePage.location\r\n             ,status:props.profilePage.status\r\n         };\r\n     }\r\n        if (props.user.length===0) {\r\n            return <LoAd />\r\n        }else{\r\n            return <div className={\"descript\"}>\r\n                        <div className='Ava'>\r\n                            <img width='100px' height='100px' src={pic} alt={'PIC'}/>\r\n                        </div>\r\n\r\n\r\n                <div>\r\n                    <div> {abovMe.fullName.name} {abovMe.fullName.lastName} </div>\r\n                    <div> {abovMe.location.city} Да, да есть такой город в {abovMe.location.country} </div>\r\n                    <Status status={abovMe.status} sendStatus={props.sendStatus} id={props.id} user={props.user.id}/>\r\n                </div>\r\n\r\n                    </div>\r\n        }\r\n});\r\nexport default ProFileInfo;","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../../conponent/FormsControll/FormsControll\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../../../utils/validator/validator\";\r\n\r\nlet minLength2=minLengthCreator(3)\r\nlet maxLength20=maxLengthCreator(20)\r\n\r\nlet AddPostForm=React.memo(props=>{\r\n    return(\r\n        <div >\r\n            <form onSubmit={props.handleSubmit} >\r\n                <div className={\"POST_FORM\"}>\r\n                 <Field\r\n                     component={Textarea}\r\n                     validate={[minLength2,maxLength20]}\r\n                     name={'post'}\r\n                     placeholder={'Post'}\r\n                     id={'textarea'}\r\n                 />\r\n                 <button>add post</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n});\r\nconst ReduxPostForm=reduxForm({form:'post'})(AddPostForm)\r\nexport default ReduxPostForm;\r\n\r\n\r\n","import React from \"react\";\r\n\r\nlet ListPost=React.memo(props=>{\r\n    let Post;\r\n    if(props.post.length!==0){\r\n        Post=props.post.map\r\n        (i=>( <WWW propsProfile={i.post} propsLogin={i.user}/> ))\r\n    }\r\n return <div className={\"POST\"} >\r\n                {Post}\r\n        </div>\r\n});\r\nexport default ListPost\r\n\r\nexport const WWW=(props)=>{\r\n    return <div className={\"POST_ITEM\"}>\r\n                  my post: {props.propsProfile} is of: {props.propsLogin}\r\n           </div>\r\n\r\n}","export const getProfile=(state)=>{\r\n    return  state.ProfileReducer.profile\r\n};\r\nexport const getPost=(state)=>{\r\n    return  state.ProfileReducer.post\r\n};\r\nexport const setLoading=(state)=>{\r\n    return  state.ProfileReducer.loading\r\n};\r\n\r\n\r\n","import React, {PureComponent} from 'react';\r\nimport '../../style/App.css';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router'\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport MenuHeader from \"../../Header/MenuHeader\";\r\nimport LoAd from \"../../conponent/load\";\r\nimport ProFileInfo from \"./Profile/ProfileInfo/ProFileInfo\";\r\nimport ReduxPostForm from \"./Profile/ProfilePost/AddPostForm\";\r\nimport ListPost from \"./Profile/ProfilePost/ListPost\";\r\nimport Cookies from \"js-cookie\";\r\nimport {GetPost, GetProfile, SendPost, SendStatus} from \"./ProfileReducer\";\r\nimport {getProfile,getPost, setLoading} from \"../../user-selector/ProfileSelector\";\r\n\r\nclass ProfileCont extends PureComponent {\r\n\tstate={\r\n\t\t UserId:this.props.state.user.id\r\n\t\t,ProfileId:parseInt(this.props.match.params.userID) || parseInt(this.props.state.user.id)\r\n\r\n\t\t,profile:this.props.profile\r\n\t\t,post:this.props.post\r\n\r\n\t\t,loading:this.props.state.loading\r\n\t};\r\n\t// shouldComponentUpdate(nextProps, nextState) {\r\n\t// \tdebugger\r\n\t// \treturn  nextProps !== this.props || nextState!==this.state\r\n\t// }\r\n\r\n\tcomponentDidMount() {\r\n\t\tsetInterval(() => this.setState({ time: Date.now() }), 1000);\r\n\t\tthis.props.GetProfile(this.state.ProfileId);\r\n\t\tthis.props.GetPost(this.state.ProfileId);\r\n\r\n\t\tconsole.log(\"1\")\r\n\t\tCookies.set('History', 'profile')\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.interval);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tif(prevState.post!==this.props.post)\r\n\t\t\tthis.setState({\r\n\t\t\t\tpost:this.props.post\r\n\t\t\t});\r\n\t\tif(prevState.profile!==this.props.profile)\r\n\t\t\tthis.setState({\r\n\t\t\t\tprofile:this.props.profile\r\n\t\t\t});\r\n\t\tif(prevState.loading!==this.props.loading)\r\n\t\t\tthis.setState({\r\n\t\t\t\tloading:this.props.loading\r\n\t\t\t})\r\n\t}\r\n\tonSubmit=(formData)=>{\r\n\t\tif(formData.post!==undefined) {\r\n\t\t\tlet textPost = formData.post;\r\n\t\t\tlet user = this.state.UserId;\r\n\t\t\tlet ProfilePage = this.state.ProfileId;\r\n\t\t\tlet post = {\r\n\t\t\t\tpost: textPost\r\n\t\t\t\t, user: user\r\n\t\t\t\t, profile: ProfilePage\r\n\t\t\t};\r\n\t\t\tthis.props.SendPost(post);\r\n\t\t\tdocument.getElementById('textarea').value = \"\";\r\n\t\t}\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t  <div>\r\n\t\t\t{ this.state.loading\r\n\t\t    ?<div><LoAd /></div>\r\n\t\t    :<div>\r\n              <div>\r\n\t\t\t\t   <MenuHeader />\r\n\t\t\t  </div>\r\n\r\n\t\t\t  <div className={'PROFILE'}>\r\n\t\t\t      <ProFileInfo  profile={this.state.ProfileId}\r\n\t\t\t\t\t\t\t\tuser={this.state.UserId}\r\n\r\n\t\t\t\t\t\t\t\tprofilePage={this.props.profile}\r\n\r\n\t\t\t\t\t\t\t\tsendStatus={this.props.SendStatus}\r\n\t\t\t\t  />\r\n\t\t\t\t  <ReduxPostForm onSubmit={this.onSubmit} />\r\n\r\n\t\t\t\t  <ListPost post={this.state.post} />\r\n \t\t      </div>\r\n\t\t  \t</div>\r\n\t\t\t}\r\n\t\t  </div>\r\n\t\t)\r\n\t}\r\n}\r\nconst MapStateToProfileReducer=(state)=>({\r\n\r\n\tprofile: getProfile(state)\r\n   ,post:getPost(state)\r\n   ,loading: setLoading(state)\r\n\r\n});\r\n\r\nexport default compose(\r\n\tconnect(MapStateToProfileReducer\r\n\t\t,{GetProfile,GetPost,SendPost,SendStatus}\r\n\t)\r\n\t,withRouter\r\n\t,withAuthRedirect\r\n)(ProfileCont)"],"sourceRoot":""}