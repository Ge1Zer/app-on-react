{"version":3,"sources":["conponent/load.js","hoc/withAuthRedirect.js","conponent/pic/loaD.svg","conponent/FormsControll/FormsControll.js","Header/Logo.jsx","Header/MenuB.js","Header/MenuHeader.js","utils/validator/validator.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Content/Profile/Profile/ProfileInfo/ProfileComponent/ProfileStatus.js","Content/Profile/Profile/ProfileInfo/ProFileInfo.js","Content/Profile/Profile/ProfilePost/AddPostForm.js","Content/Profile/Profile/ProfilePost/ListPost.js","user-selector/ProfileSelector.js","Content/Profile/ProfileCont.jsx"],"names":["LoAd","src","loaD","alt","StateTo","state","LoginReducer","withAuthRedirect","Component","RediComp","this","props","userEntry","status","to","React","connect","module","exports","Input","input","meta","value","error","touched","className","Textarea","errore","wrap","rows","Logo","compose","Exit","onClick","MenuHeader","min","required","maxLengthCreator","maxLength","length","undefined","minLengthCreator","minLength","email","zzzz","test","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","_s","_i","next","done","push","err","TypeError","Status","memo","useState","editMod","SetEditMod","SetStatus","useEffect","id","user","onDoubleClick","onChange","currentTarget","autoFocus","onBlur","sendStatus","deactivateEditMod","ProFileInfo","pic","abovMe","fullName","name","lastName","location","city","country","profilePage","picture","width","height","minLength2","maxLength20","AddPostForm","onSubmit","handleSubmit","Field","component","validate","placeholder","ReduxPostForm","reduxForm","form","ListPost","Post","post","map","propsProfile","propsLogin","WWW","getProfile","ProfileReducer","profile","getPost","setLoading","loading","ProfileCont","UserId","ProfileId","parseInt","match","params","userID","formData","SendPost","document","getElementById","setInterval","setState","time","Date","now","GetProfile","GetPost","console","log","Cookies","set","clearInterval","interval","prevProps","prevState","snapshot","SendStatus","PureComponent","withRouter"],"mappings":"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","file":"static/js/5.8fca92c4.chunk.js","sourcesContent":["import loaD from \"./pic/loaD.svg\";\r\nimport React from \"react\";\r\n\r\nlet LoAd = () => {\r\n    return <img src={loaD} alt={'PIC'}/>\r\n}\r\nexport default LoAd;","import React from 'react'\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet StateTo = (state) => ({state: state.LoginReducer});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RediComp extends React.Component {\r\n\r\n        render() {\r\n            return (\r\n                this.props.state.userEntry.status\r\n                    ? <Component {...this.props} />\r\n                    : <Redirect to={`/`}/>\r\n            )\r\n        }\r\n    }\r\n\r\n    let ConnectedAuth = connect(StateTo)(RediComp);\r\n\r\n    return ConnectedAuth\r\n};\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/loaD.570fe6fa.svg\";","import React from 'react'\r\nimport \"./style.css\"\r\n\r\nexport const Input = ({input, meta, value, ...props}) => {\r\n    const error = meta.touched && meta.error;\r\n    return (\r\n        <div>\r\n            <div>\r\n                <input {...input} {...props} className={error && \"formControl\"}/>\r\n            </div>\r\n            {error && <span className={'formSpan'}>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const errore = meta.touched && meta.error;\r\n    return (\r\n        <div>\r\n            <div className={errore && \"formControl\"}>\r\n                <textarea {...input} {...props} wrap=\"soft\" rows={'1'}/>\r\n            </div>\r\n            {errore && <span>{errore}</span>}\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport '../style/App.css';\r\n\r\nfunction Logo() {\r\n    return <div className={'LOGO_PIC'}>\r\n        СИИИЛЬНО\r\n    </div>\r\n\r\n}\r\n\r\nexport default Logo","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {Exit} from \"../Content/Login/LoginReducer\";\r\n\r\nlet Menu = (props) => {\r\n    function exit() {\r\n        props.Exit()\r\n    }\r\n\r\n    return (\r\n        <div className=\"HEADER_AN_PAGE\">\r\n\r\n            <div><NavLink to='/profile' className=\"Button_item\">Моя Страница </NavLink></div>\r\n            <div><NavLink to=\"/message\" className=\"Button_item\">Сообщения </NavLink></div>\r\n            <div><NavLink to='/subscribers' className=\"Button_item\">Пользователи </NavLink></div>\r\n            <div>\r\n                <button onClick={exit}>Exit</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateTo = (state) => ({state: state.LoginReducer,});\r\nexport default compose(\r\n    connect(mapStateTo, {Exit}\r\n    )\r\n)(Menu)","import Logo from \"./Logo\";\r\nimport Menu from \"./MenuB\";\r\nimport React from \"react\";\r\n\r\nlet MenuHeader = () => {\r\n    return <div>\r\n        <Logo/>\r\n        <Menu/>\r\n    </div>\r\n\r\n}\r\nexport default MenuHeader","//Это проверка, совпадает ли введеное пользователлем с требованиям к \"логину и паролю\"\r\n\r\n//проверка---это поле является обязательны после\r\n// клика он запоминает, при уходе он проверит заполнили ли вы его\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const required = (value) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n};\r\n\r\n//Это устанавливает проверку на максимальную длину записанного\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    return (\r\n        value && value.length > maxLength\r\n            ? `Max length is ${maxLength} symbols`\r\n            : undefined\r\n    )\r\n};\r\n\r\n//Это устанавливает проверку на минимальную длину записанного\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    return (\r\n        value && value.length < minLength ? `Min length is ${minLength} symbols` : undefined\r\n    )\r\n};\r\n\r\n//Провека. Число ли это?\r\nconst number = (value) =>\r\n    value && isNaN(Number(value)) ? 'Must be a number' : undefined\r\n\r\n\r\n// меньше ли чем минимальное значение\r\nconst minValue = min => value =>\r\n    value && value < min ? `Must be at least ${min}` : undefined\r\nconst minValue13 = minValue(13)\r\n\r\n//проверка на правильность заполнения МЫЛА\r\nexport const email = (zzzz) => (value) => {\r\n    debugger\r\n    return (\r\n        value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n            ? 'Invalid email address'\r\n            : !zzzz.status ? <span>Пароль или логин не правильный</span> : undefined\r\n    )\r\n\r\n};\r\n\r\n// меньше чем допустимый вызраст\r\nconst tooYoung = value =>\r\n    value && value < 13\r\n        ? 'You do not meet the minimum age requirement!'\r\n        : undefined\r\n\r\n// меньше чем допустимый вызраст\r\nconst aol = value =>\r\n    value && /.+@aol\\.com/.test(value)\r\n        ? 'Really? You still use AOL for your email?'\r\n        : undefined\r\n\r\n\r\n// Только арифметические знаки\r\nconst alphaNumeric = value =>\r\n    value && /[^a-zA-Z0-9 ]/i.test(value)\r\n        ? 'Only alphanumeric characters'\r\n        : undefined\r\n\r\n// номер телефона 10 символов\r\nexport const phoneNumber = value =>\r\n    value && !/^(0|[1-9][0-9]{9})$/i.test(value)\r\n        ? 'Invalid phone number, must be 10 digits'\r\n        : undefined\r\n\r\nlet r = {number, minValue13, email, tooYoung, aol, alphaNumeric, phoneNumber}\r\n\r\n\r\nconst mapStateTo = (state) => ({\r\n    userEntry: state.LoginReducer.userEntry\r\n});\r\nexport default compose(connect(mapStateTo, null))(email)\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, {useEffect, useState} from 'react';\r\n\r\nlet Status = React.memo(props => {\r\n    let [editMod, SetEditMod] = useState(false);\r\n    let [status, SetStatus] = useState(props.status !== '' ? props.status : '');\r\n\r\n    useEffect(() => {\r\n            SetStatus(props.status);\r\n        }, [props.status]\r\n    )\r\n\r\n    let activateEditMod = () => {\r\n        SetEditMod(true);\r\n    };\r\n    let deactivateEditMod = (status) => {\r\n        SetEditMod(true);\r\n        props.sendStatus(status)\r\n    };\r\n    let EditMod = (status) => {\r\n        SetStatus(status.currentTarget.value)\r\n    };\r\n\r\n    return <div>\r\n        {\r\n            props.id === props.user\r\n                ? <div>\r\n                    {\r\n                        !editMod &&\r\n                        <span onDoubleClick={activateEditMod}>\r\n                              {props.id === props.user ? status : props.status || \"Your Status\"}\r\n                          </span>\r\n                    }\r\n                    {\r\n                        editMod &&\r\n                        <input id={'inputStatus'}\r\n                               onChange={EditMod}\r\n                               autoFocus={true}\r\n                               onBlur={() => {\r\n                                   deactivateEditMod(status)\r\n                               }}\r\n                               value={status}\r\n                        />\r\n                    }\r\n                </div>\r\n\r\n                : <div>\r\n                          <span>\r\n                              {props.status}\r\n                          </span>\r\n                </div>\r\n        }\r\n    </div>\r\n});\r\nexport default Status\r\n//      forceUpdate()--------------принудительно обновить state","import React from 'react';\r\nimport LoAd from \"../../../../conponent/load\";\r\nimport Status from \"./ProfileComponent/ProfileStatus\";\r\n\r\nconst ProFileInfo = React.memo(props => {\r\n    let pic, abovMe;\r\n    abovMe = {\r\n        fullName: {name: '', lastName: ''}\r\n        , location: {city: '', country: ''}\r\n        , status: ''\r\n    };\r\n    if (props.profilePage.length !== 0) {\r\n        pic = props.profilePage.picture;\r\n        abovMe = {\r\n            fullName: props.profilePage.fullName\r\n            , location: props.profilePage.location\r\n            , status: props.profilePage.status\r\n        };\r\n    }\r\n    if (props.user.length === 0) {\r\n        return <LoAd/>\r\n    } else {\r\n        return <div className={\"descript\"}>\r\n            <div className='Ava'>\r\n                <img width='100px' height='100px' src={pic} alt={'PIC'}/>\r\n            </div>\r\n\r\n\r\n            <div>\r\n                <div> {abovMe.fullName.name} {abovMe.fullName.lastName} </div>\r\n                <div> {abovMe.location.city} Да, да есть такой город в {abovMe.location.country} </div>\r\n                <Status status={abovMe.status} sendStatus={props.sendStatus} id={props.id} user={props.user.id}/>\r\n            </div>\r\n\r\n        </div>\r\n    }\r\n});\r\nexport default ProFileInfo;","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../../conponent/FormsControll/FormsControll\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../../../utils/validator/validator\";\r\n\r\nlet minLength2 = minLengthCreator(3)\r\nlet maxLength20 = maxLengthCreator(20)\r\n\r\nlet AddPostForm = React.memo(props => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div className={\"POST_FORM\"}>\r\n                    <Field\r\n                        component={Textarea}\r\n                        validate={[minLength2, maxLength20]}\r\n                        name={'post'}\r\n                        placeholder={'Post'}\r\n                        id={'textarea'}\r\n                    />\r\n                    <button>add post</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n});\r\nconst ReduxPostForm = reduxForm({form: 'post'})(AddPostForm)\r\nexport default ReduxPostForm;\r\n\r\n\r\n","import React from \"react\";\r\n\r\nlet ListPost = React.memo(props => {\r\n    let Post;\r\n    if (props.post.length !== 0) {\r\n        Post = props.post.map\r\n        (i => (<WWW propsProfile={i.post} propsLogin={i.user}/>))\r\n    }\r\n    return <div className={\"POST\"}>\r\n        {Post}\r\n    </div>\r\n});\r\nexport default ListPost\r\n\r\nexport const WWW = (props) => {\r\n    return <div className={\"POST_ITEM\"}>\r\n        my post: {props.propsProfile} is of: {props.propsLogin}\r\n    </div>\r\n\r\n}","export const getProfile = (state) => {\r\n    return state.ProfileReducer.profile\r\n};\r\nexport const getPost = (state) => {\r\n    return state.ProfileReducer.post\r\n};\r\nexport const setLoading = (state) => {\r\n    return state.ProfileReducer.loading\r\n};\r\n\r\n\r\n","import React, {PureComponent} from 'react';\r\nimport '../../style/App.css';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router'\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport MenuHeader from \"../../Header/MenuHeader\";\r\nimport LoAd from \"../../conponent/load\";\r\nimport ProFileInfo from \"./Profile/ProfileInfo/ProFileInfo\";\r\nimport ReduxPostForm from \"./Profile/ProfilePost/AddPostForm\";\r\nimport ListPost from \"./Profile/ProfilePost/ListPost\";\r\nimport Cookies from \"js-cookie\";\r\nimport {GetPost, GetProfile, SendPost, SendStatus} from \"./ProfileReducer\";\r\nimport {getProfile, getPost, setLoading} from \"../../user-selector/ProfileSelector\";\r\n\r\nclass ProfileCont extends PureComponent {\r\n    state = {\r\n        UserId: this.props.state.user.id\r\n        , ProfileId: parseInt(this.props.match.params.userID) || parseInt(this.props.state.user.id)\r\n\r\n        , profile: this.props.profile\r\n        , post: this.props.post\r\n\r\n        , loading: this.props.state.loading\r\n    };\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    // \tdebugger\r\n    // \treturn  nextProps !== this.props || nextState!==this.state\r\n    // }\r\n\r\n    componentDidMount() {\r\n        setInterval(() => this.setState({time: Date.now()}), 1000);\r\n        this.props.GetProfile(this.state.ProfileId);\r\n        this.props.GetPost(this.state.ProfileId);\r\n\r\n        console.log(\"1\")\r\n        Cookies.set('History', 'profile')\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevState.post !== this.props.post)\r\n            this.setState({\r\n                post: this.props.post\r\n            });\r\n        if (prevState.profile !== this.props.profile)\r\n            this.setState({\r\n                profile: this.props.profile\r\n            });\r\n        if (prevState.loading !== this.props.loading)\r\n            this.setState({\r\n                loading: this.props.loading\r\n            })\r\n    }\r\n\r\n    onSubmit = (formData) => {\r\n        if (formData.post !== undefined) {\r\n            let textPost = formData.post;\r\n            let user = this.state.UserId;\r\n            let ProfilePage = this.state.ProfileId;\r\n            let post = {\r\n                post: textPost\r\n                , user: user\r\n                , profile: ProfilePage\r\n            };\r\n            this.props.SendPost(post);\r\n            document.getElementById('textarea').value = \"\";\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.loading\r\n                    ? <div><LoAd/></div>\r\n                    : <div>\r\n                        <div>\r\n                            <MenuHeader/>\r\n                        </div>\r\n\r\n                        <div className={'PROFILE'}>\r\n                            <ProFileInfo profile={this.state.ProfileId}\r\n                                         user={this.state.UserId}\r\n\r\n                                         profilePage={this.props.profile}\r\n\r\n                                         sendStatus={this.props.SendStatus}\r\n                            />\r\n                            <ReduxPostForm onSubmit={this.onSubmit}/>\r\n\r\n                            <ListPost post={this.state.post}/>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst MapStateToProfileReducer = (state) => ({\r\n\r\n    profile: getProfile(state)\r\n    , post: getPost(state)\r\n    , loading: setLoading(state)\r\n\r\n});\r\n\r\nexport default compose(\r\n    connect(MapStateToProfileReducer\r\n        , {GetProfile, GetPost, SendPost, SendStatus}\r\n    )\r\n    , withRouter\r\n    , withAuthRedirect\r\n)(ProfileCont)"],"sourceRoot":""}