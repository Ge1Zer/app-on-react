{"version":3,"sources":["Content/People/PeopleReducer.js","api/api.js","conponent/pic/829.svg","Content/Login/LoginReducer.js","serviceWorker.js","Content/Registration/RegistrationReducer.js","reduxStore.js","Header/Logo.jsx","Header/MenuB.js","Header/MenuHeader.js","user-selector/LoginSelector.js","Content/ContentCont.js","utils/validator/validator.js","conponent/FormsControll/FormsControll.js","Content/Login/Login.js","hoc/step2redirectInProfiles.js","Content/Login/LoginCont.js","Content/Registration/Registration.js","user-selector/RegistrationSelector.js","hoc/RegistrationOnLogin.js","Content/Registration/RegistrationCont.js","App.js","index.js","hoc/withAuthRedirect.js","conponent/load.js","Content/Profile/ProfileReducer.js","Content/Messages/MessageReducer.js"],"names":["people","loading","SetPeople","type","Loading","SetCurrent","current","GetUser","page","dispatch","a","UserSubAPI","getPeople","data","FollowPeople","friend","subScribe","follow","PeopleReducer","state","action","f","filter","r","_id","friendStatus","instance","axios","create","withCredentials","baseURL","UserAppAPI","exit","get","then","response","registration","form","post","Login","login","Password","password","Nickname","name","UserLoginAPI","getUserFromServer","sendUserFormServer","value","UserProfitAPI","getProfileFromServer","profile","sendInformation","inform","UserMessageAPI","messageListFriend","messageListParty","messageListMessage","id","list","SendMessage","SendSetting","setting","tags","nickname","module","exports","loginization","status","message","String","user","Object","SettingUserDispatch","GetUserFromServer","SendUserFormForServer","formData","stopSubmit","_error","mess","Exit","LoginReducer","Boolean","window","location","hostname","match","RegistrationStatus","RegistrationMessage","RegistrationReducer","reducers","combineReducers","ProfileReducer","MessageReducer","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Logo","className","connect","props","to","onClick","MenuHeader","getLoginUser","getUserEntry","userEntry","getLoading","ProfileCont","lazy","MessageCont","PeopleCont","log","peo","withAuthRedirect","Content","fallback","path","render","required","maxLengthCreator","maxLength","length","undefined","minLengthCreator","minLength","zzzz","test","Input","input","meta","error","touched","minLength6","ReduxLoginForm","reduxForm","onSubmit","handleSubmit","Field","component","placeholder","validate","redirectInProfiles","Component","ComponentRedirect","History","localStorage","this","Profile","Dialog","React","userStatus","useEffect","Cookies","set","maxLength16","ReduxRegistrationForm","RegistrationCont","EntryForm","console","RegistrationThunk","PureComponent","FormRegistration","App","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","unregister","StateTo","RediComp","LoAd","src","loaD","alt","profileState","EditInform","GetProfileFromServer","profileNickname","profilePhoto","Photo","origin","default","profilePhotoMin","PhotoMin","profileStatus","Status","profileLocation","Location","profileAge","Age","profileSkills","Skills","profileTags","Tags","profileGender","Gender","photo","age","skills","gender","Message","ListMessage","AvaParty","NameParty","Friend","Party","SetMessage","pushMessage","deleteParty","deleted","GetListMessages","GetListFriend","GetListParty","text","img","date","i","findIndex","splice"],"mappings":"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","file":"static/js/main.22a69ae7.chunk.js","sourcesContent":["import {UserSubAPI} from \"../../api/api\";\r\n\r\nlet people = {\r\n    loading: false\r\n    ,people:[]\r\n\r\n}\r\n//#####################################################################\r\nconst PeopleReducer = (state = people, action) => {\r\n    switch (action.type) {\r\n//##############################################\r\n        case \"GET-USERS\"    :\r\n            return {\r\n                ...state\r\n                , people: action.people.people\r\n            };\r\n        case \"FOLLOW-PEOPLE\"    :\r\n            let f=state.people.filter(r=>r._id===action.follow);\r\n                f[0].friendStatus? f[0].friendStatus=false:f[0].friendStatus=true;\r\n            return {\r\n                ...state\r\n            };\r\n        case 'LOADING'      :\r\n            return {\r\n                ...state\r\n                , loading: action.loading\r\n            };\r\n        case 'CURRENT'      : debugger\r\n            return {\r\n                ...state\r\n                , current: action.current\r\n            };\r\n//#################################################\r\n        default             :\r\n            return state\r\n    }\r\n};\r\n//#####################################################################\r\n//Action for ComponentDid Mount or ComponentDidUpdate\r\nexport let SetPeople = (people) => ({type: \"GET-USERS\", people});\r\nexport let Loading = (loading) => ({type: 'LOADING', loading});\r\nexport let SetCurrent = (current) => ({type: 'CURRENT', current});\r\n//############################################################################\r\n//Action for changing state\r\nexport const followPeople = (follow) => ({type: \"FOLLOW-PEOPLE\", follow});\r\n//####################################################################################################\r\nexport const GetUser = (page) => async (dispatch) => {\r\n    dispatch(Loading(true));\r\n    let data = await UserSubAPI.getPeople(page);\r\n    if (data) {\r\n        dispatch(SetPeople(data));\r\n        dispatch(Loading(false));\r\n    }\r\n};\r\nexport const FollowPeople = (friend) => async (dispatch) => {\r\n    dispatch(Loading(true));\r\n    let data = await UserSubAPI.subScribe(friend);\r\n    if (data) {\r\n        dispatch(followPeople(friend));\r\n        dispatch(Loading(false));\r\n    }\r\n};\r\n//####################################################################################################\r\n\r\n\r\nexport default PeopleReducer;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://express-kuku.herokuapp.com/',\r\n    // headers:{'KEY FOR CONNECTED WITH SERVER':\"12312-12312-SDF-34SDF2\"}\r\n});\r\n//_____________________________________________________________________________________\r\nexport const UserAppAPI = {\r\n\r\n    exit() {\r\n        return instance.get('exit').then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    registration(form) {\r\n        return instance.post('registration', {\r\n            Login: form.login,\r\n            Password: form.password,\r\n            Nickname: form.name\r\n        }).then(response => {\r\n            return response.data\r\n        })\r\n    }\r\n};\r\n//__________________________________________________________________________________\r\nexport const UserLoginAPI = {\r\n    getUserFromServer() {\r\n        debugger\r\n        return instance.get('login').then(response => {\r\n            debugger\r\n            return response.data\r\n        })\r\n    },\r\n    sendUserFormServer(value) {\r\n        debugger\r\n        return instance.post('login', {Login:value.login, Password:value.password}).then(response => {\r\n            debugger\r\n            return response.data\r\n        })\r\n    }\r\n};\r\n//___________________________________________________________________________________\r\nexport const UserProfitAPI = {\r\n\r\n    getProfileFromServer(profile) {\r\n        return instance.get(`profile/${profile}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    sendInformation(inform){\r\n        return instance.post(`update/info`, {inform})\r\n    }\r\n\r\n};\r\n//_____________________________________________________________________________________\r\nexport const UserMessageAPI = {\r\n    messageListFriend() {\r\n        return instance.get(`message/friend`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    messageListParty() {\r\n        return instance.get(`message/party`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    messageListMessage({id,list}) {\r\n        debugger\r\n        return instance.post(`message/list`,{id,list}).then(response => {\r\n            debugger\r\n            return response.data\r\n        })\r\n    },\r\n    SendMessage(profile) {\r\n        return instance.post(`message/send`, {profile}).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    SendSetting(setting) {\r\n        debugger\r\n        return instance.post(`message/setting`, {setting}).then(response => {\r\n            debugger\r\n            return response.data\r\n        })\r\n    }\r\n};\r\n//_____________________________________________________________________________________\r\nexport const UserSubAPI = {\r\n    getPeople({tags,nickname,list}) {\r\n        return instance.post('people',{tags,nickname,list}).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    subScribe(friend) {\r\n        return instance.post('subscribe', {id: friend}).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n};\r\n//_____________________________________________________________________________________\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/829.14706964.svg\";","import {UserAppAPI, UserLoginAPI} from \"../../api/api\";\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nlet loginization = {\r\n    status: false\r\n    , message: String\r\n    , user: Object\r\n\r\n    , loading: false\r\n};\r\n//#####################################################################\r\nconst LoginReducer = (state = loginization, action) => {\r\n    switch (action.type) {\r\n//##############################################\r\n        case 'SET-LOGIN':\r\n            return {\r\n                ...state\r\n                , status: action.user.status\r\n                , message: action.user.message\r\n                , user: action.user._id\r\n            };\r\n        case 'DEL-USER':\r\n            return {\r\n                ...state\r\n                , status: false\r\n                , message: String\r\n                , user: Object\r\n            };\r\n//#################################################\r\n        case 'LOADING'      :\r\n            return {\r\n                ...state\r\n                , loading: action.loading\r\n            };\r\n//#################################################\r\n        default             :\r\n            return {\r\n                ...state\r\n            };\r\n    }\r\n};\r\n//#####################################################################\r\nexport let SettingUserDispatch = (user) => ({type: 'SET-LOGIN', user});\r\nexport let DeletedUserDispatch = () => ({type: 'DEL-USER'});\r\n\r\nexport let Loading = (loading) => ({type: 'LOADING', loading});\r\n//############################################################################\r\nexport const GetUserFromServer = () =>\r\n    async (dispatch) => {\r\n        let data = await UserLoginAPI.getUserFromServer();\r\n    data ? dispatch(SettingUserDispatch(data))\r\n         : dispatch(DeletedUserDispatch());\r\n};//получить пользователя из куков\r\nexport const SendUserFormForServer = (formData) => async (dispatch) => {\r\n    let data = await UserLoginAPI.sendUserFormServer(formData);\r\n    data ? dispatch(SettingUserDispatch(data))\r\n         : dispatch(stopSubmit('login', {_error: data.mess}))\r\n};//войти с помощью пароля и логин\r\nexport const Exit = () => (dispatch) => {\r\n    UserAppAPI.exit().then(data => {\r\n        data && dispatch(DeletedUserDispatch());\r\n    })\r\n};//очистить стейт и удалить куки о пользователе\r\n//####################################################################################################\r\nexport default LoginReducer;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {UserAppAPI} from \"../../api/api\";\r\n\r\nlet status = {\r\n    RegistrationStatus: false\r\n    , RegistrationMessage: ''\r\n}\r\n//#####################################################################\r\n// eslint-disable-next-line no-unused-vars\r\nconst RegistrationReducer = (state = status, action) => {\r\n    if (action.type === 'REGISTRATION-STATUS') {\r\n        return {\r\n            ...state\r\n            , RegistrationStatus: action.registration.status\r\n            , RegistrationMessage: action.registration.mess\r\n        }\r\n    } else {\r\n        return {\r\n            ...state\r\n        }\r\n    }\r\n};\r\n//#####################################################################\r\n//Action for ComponentDid Mount or ComponentDidUpdate\r\nexport let RegistrationDispatch = (registration) => ({type: 'REGISTRATION-STATUS', registration});\r\n//############################################################################\r\n//Thunk for send on Server\r\nexport const RegistrationThunk = (FormRegistration) => (dispatch) =>{\r\n        UserAppAPI.registration(FormRegistration).then(data => {\r\n            data.status && dispatch(RegistrationDispatch(data))\r\n        })\r\n};\r\n//####################################################################################################\r\nexport default RegistrationReducer;\r\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nimport LoginReducer from \"./Content/Login/LoginReducer\";\r\nimport RegistrationReducer from \"./Content/Registration/RegistrationReducer\";\r\nimport ProfileReducer from \"./Content/Profile/ProfileReducer\";\r\nimport MessageReducer from \"./Content/Messages/MessageReducer\";\r\nimport PeopleReducer from \"./Content/People/PeopleReducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    LoginReducer: LoginReducer,\r\n    RegistrationReducer: RegistrationReducer,\r\n\r\n    ProfileReducer: ProfileReducer,\r\n    MessageReducer: MessageReducer,\r\n    PeopleReducer: PeopleReducer,\r\n\r\n    form: formReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n\r\n\r\n","import React from 'react';\r\nimport '../style/App.css';\r\n\r\nfunction Logo() {\r\n    return  <div className={'Logo'}>\r\n\r\n            </div>\r\n\r\n}\r\n\r\nexport default Logo","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {Exit} from \"../Content/Login/LoginReducer\";\r\nimport './style/style.css';\r\n\r\nlet Menu = (props) => {\r\n    function exit() {\r\n        props.Exit()\r\n    }\r\n\r\n    return (\r\n        <div className=\"Menu\">\r\n            <div><NavLink to='/profile' className=\"Button_item\">Моя Страница </NavLink></div>\r\n            <div><NavLink to=\"/message\" className=\"Button_item\">Сообщения </NavLink></div>\r\n            <div><NavLink to='/people' className=\"Button_item\">Пользователи </NavLink></div>\r\n            <div><button onClick={exit}>Exit</button></div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateTo = (state) => ({state: state.LoginReducer,});\r\nexport default compose(\r\n    connect(mapStateTo, {Exit}\r\n    )\r\n)(Menu)","import Logo from \"./Logo\";\r\nimport Menu from \"./MenuB\";\r\nimport React from \"react\";\r\n\r\nlet MenuHeader = () => {\r\n    return <div className={'Header'}>\r\n                <Logo/>\r\n                <Menu/>\r\n           </div>\r\n\r\n}\r\nexport default MenuHeader","export const getLoginUser = (state) => {\r\n    return state.LoginReducer.user\r\n};\r\nexport const getUserEntry = (state) => {\r\n    return state.LoginReducer.userEntry\r\n};\r\nexport const getLoading = (state) => {\r\n    return state.LoginReducer.loading\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Suspense, lazy} from 'react'\r\nimport {Route} from \"react-router\";\r\nimport MenuHeader from \"../Header/MenuHeader\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport LoAd from \"../conponent/load\";\r\nimport {getLoading, getLoginUser, getUserEntry} from \"../user-selector/LoginSelector\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst ProfileCont = lazy(() => import ('./Profile/ProfileCont'));\r\nconst MessageCont = lazy(() => import(\"./Messages/MessageCont\"));\r\nconst PeopleCont = lazy(() => import(\"./People/PeopleCont\"));\r\n\r\nlet ContentCont = (props) => {\r\n    return <div className={'cont_Section'}>\r\n        {props.log && props.mess && props.peo && <div><LoAd/></div>}\r\n        {!props.log && !props.mess && !props.peo && <div><MenuHeader/></div>}\r\n        {!props.log && !props.mess && !props.peo && <div> <Content/></div>}\r\n           </div>\r\n};\r\n\r\nconst mapStateTo = (state) => ({\r\n    log: state.LoginReducer.loading\r\n    , mess:  state.MessageReducer.loading\r\n    , peo:  state.PeopleReducer.loading\r\n});\r\n\r\nexport default compose( connect(mapStateTo),withAuthRedirect )(ContentCont)\r\n\r\n\r\nlet Content = () => {\r\n    return <Suspense fallback={'.... чу херня происходит, давай подождем'}>\r\n        <div>\r\n            <Route path='/profile/:profile?' render={() =><ProfileCont/>}/>\r\n            <Route path='/message/:profile?' render={() => <MessageCont/>}/>\r\n            <Route path='/people' render={() =><PeopleCont/>}/>\r\n        </div>\r\n    </Suspense>\r\n};\r\n","//Это проверка, совпадает ли введеное пользователлем с требованиям к \"логину и паролю\"\r\n\r\n//проверка---это поле является обязательны после\r\n// клика он запоминает, при уходе он проверит заполнили ли вы его\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const required = (value) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n};\r\n\r\n//Это устанавливает проверку на максимальную длину записанного\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    return (\r\n        value && value.length > maxLength\r\n            ? `Max length is ${maxLength} symbols`\r\n            : undefined\r\n    )\r\n};\r\n\r\n//Это устанавливает проверку на минимальную длину записанного\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    return (\r\n        value && value.length < minLength ? `Min length is ${minLength} symbols` : undefined\r\n    )\r\n};\r\n\r\n// //Провека. Число ли это?\r\n// const number = (value) =>\r\n//     value && isNaN(Number(value)) ? 'Must be a number' : undefined\r\n//\r\n//\r\n// // меньше ли чем минимальное значение\r\n// const minValue = min => value =>\r\n//     value && value < min ? `Must be at least ${min}` : undefined\r\n// const minValue13 = minValue(13)\r\n//\r\n// //проверка на правильность заполнения МЫЛА\r\nexport const email = (zzzz) => (value) => {\r\n    debugger\r\n    return (\r\n        value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n            ? 'Invalid email address'\r\n            : !zzzz.status ? <span>Пароль или логин не правильный</span> : undefined\r\n    )\r\n\r\n};\r\n//\r\n// // меньше чем допустимый вызраст\r\n// const tooYoung = value =>\r\n//     value && value < 13\r\n//         ? 'You do not meet the minimum age requirement!'\r\n//         : undefined\r\n//\r\n// // меньше чем допустимый вызраст\r\n// const aol = value =>\r\n//     value && /.+@aol\\.com/.test(value)\r\n//         ? 'Really? You still use AOL for your email?'\r\n//         : undefined\r\n//\r\n//\r\n// // Только арифметические знаки\r\n// const alphaNumeric = value =>\r\n//     value && /[^a-zA-Z0-9 ]/i.test(value)\r\n//         ? 'Only alphanumeric characters'\r\n//         : undefined\r\n//\r\n// // номер телефона 10 символов\r\n// export const phoneNumber = value =>\r\n//     value && !/^(0|[1-9][0-9]{9})$/i.test(value)\r\n//         ? 'Invalid phone number, must be 10 digits'\r\n//         : undefined\r\n//\r\n// let r = {number, minValue13, email, tooYoung, aol, alphaNumeric, phoneNumber}\r\n\r\n\r\nconst mapStateTo = (state) => ({\r\n    userEntry: state.LoginReducer.userEntry\r\n});\r\nexport default compose(connect(mapStateTo, null))(email)\r\n","import React from 'react'\r\nimport \"./style.css\"\r\n\r\nexport const Input = ({input, meta, value, ...props}) => {\r\n    const error = meta.touched && meta.error;\r\n    return (\r\n        <div>\r\n            <div>\r\n                <input {...input} {...props} className={error && \"formControl\"}/>\r\n            </div>\r\n            {error && <span className={'formSpan'}>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const errore = meta.touched && meta.error;\r\n    return (\r\n        <div>\r\n            <div className={errore && \"formControl\"}>\r\n                <textarea {...input} {...props} wrap=\"soft\" rows={'1'}/>\r\n            </div>\r\n            {errore && <span>{errore}</span>}\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../utils/validator/validator\";\r\nimport {Input} from \"../../conponent/FormsControll/FormsControll\";\r\nimport \"./../../conponent/FormsControll/style.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst maxLength15 = maxLengthCreator(15);\r\nconst minLength6 = minLengthCreator(6);\r\n\r\nlet Login = (props) => {\r\n    return <div className={'login_Section'}>\r\n        <div>LOGIN</div>\r\n        <div>Entry Your Login & Password, please</div>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field required\r\n                        name={'login'}\r\n                        component={Input}\r\n                        placeholder={'Login'}\r\n                        validate={[required, minLength6]}/>\r\n            </div>\r\n            <div><Field required\r\n                        placeholder={'Password'}\r\n                        component={Input}\r\n                        name={'password'}\r\n                        validate={[required, minLength6]}/>\r\n            </div>\r\n            <div><Field component={'input'}\r\n                        type={'checkbox'}\r\n                        name={'rememberMe'}\r\n                        validate={[]}/>Remember me\r\n            </div>\r\n            {props.error && <div className={'errorEmaOrPass'}>{props.error} Это хуйня, давай заново </div>}\r\n            <div>\r\n                <button value=\"Enter\">Enter</button>\r\n                <button><NavLink to='/registration' className=\"Button_item\">Регистрация </NavLink></button>\r\n            </div>\r\n\r\n        </form>\r\n    </div>\r\n}\r\nconst ReduxLoginForm = reduxForm({form: 'login'})(Login);\r\n\r\nexport default ReduxLoginForm;","import React from 'react'\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst redirectInProfiles = (Component) => {\r\n\r\n    let state = (state) => ({state: state.LoginReducer, userStatus: state.ProfileReducer.status});\r\n\r\n    class ComponentRedirect extends React.Component {\r\n        state={\r\n        History :  localStorage.History\r\n    };\r\n        render() {\r\n            if (this.props.state.status) {\r\n                switch (History) {\r\n                    case 'profile' :\r\n                        return <Redirect to={`/profile/${this.state.Profile}`}/>;\r\n                    case 'message' :\r\n                        return <Redirect to={`/message/${this.state.Dialog}`}/>;\r\n                    case 'people' :\r\n                        return <Redirect to={`/people`}/>;\r\n                    default  :\r\n                        return <Redirect to={`/profile`}/>;\r\n                }\r\n            } else {\r\n                return <Component {...this.props} />\r\n            }\r\n        }\r\n    }\r\n    return connect(state)(ComponentRedirect)\r\n};\r\nexport default redirectInProfiles","import React, {useEffect} from 'react';\r\n\r\nimport ReduxLoginForm from \"./Login\";\r\n\r\nimport './style/style.css';\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport redirectInProfiles from \"../../hoc/step2redirectInProfiles\";\r\nimport {Exit, GetUserFromServer, SendUserFormForServer} from \"./LoginReducer\";\r\nimport {getLoading, getLoginUser, getUserEntry} from \"../../user-selector/LoginSelector\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nlet  LoginCont=(props)=>{\r\n\r\n    useEffect(()=> {\r\n        props.GetUserFromServer()\r\n    },[]);\r\n\r\n    let EntryForm = (formData) => {\r\n        props.SendUserFormForServer(formData)\r\n        Cookies.set('History', 'profile')\r\n    };\r\n\r\n    return (\r\n            <div className={'entry_Section'}>\r\n                  <ReduxLoginForm onSubmit={EntryForm}  />\r\n            </div>\r\n    )\r\n};\r\nconst mapStateTo = (state) => ({\r\n    user: getLoginUser(state)\r\n    , userEntry: getUserEntry(state)\r\n    , loading: getLoading(state)\r\n});\r\nexport default compose(connect(mapStateTo, {\r\n    Exit,\r\n    GetUserFromServer,\r\n    SendUserFormForServer\r\n}), redirectInProfiles)(LoginCont)\r\n\r\n\r\n","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../utils/validator/validator\";\r\nimport {Input} from \"../../conponent/FormsControll/FormsControll\";\r\nimport \"./../../conponent/FormsControll/style.css\"\r\n\r\nconst maxLength16 = maxLengthCreator(16)\r\nconst minLength6 = minLengthCreator(6)\r\n\r\nlet Registration = (props) => {\r\n    const {handleSubmit} = props\r\n    return <div className={'reg_Section'}>\r\n        <h1>REGISTRATION</h1>\r\n        <div></div>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <div>Nickname</div>\r\n                <Field component={Input}\r\n                       placeholder={'You`r Name'}\r\n                       name={'name'}\r\n                       validate={[required, minLength6, maxLength16]}/>\r\n            </div>\r\n\r\n            <div>\r\n                <div>Login</div>\r\n                <Field required\r\n                       name={'login'}\r\n                       component={Input}\r\n                       placeholder={'Login'}\r\n                       validate={[required, minLength6]}/>\r\n            </div>\r\n            <div>\r\n                <div>Password</div>\r\n                <Field required\r\n                       placeholder={'Password'}\r\n                       component={Input}\r\n                       name={'password'}\r\n                       validate={[required, minLength6, maxLength16]}/>\r\n            </div>\r\n\r\n            {props.error && <div className={'errorEmaOrPass'}>{props.error} Это хуйня, давай заново </div>}\r\n            <div>\r\n                <button value=\"Enter\">Enter</button>\r\n            </div>\r\n\r\n        </form>\r\n    </div>\r\n};\r\nconst ReduxRegistrationForm = reduxForm({form: 'registration'})(Registration);\r\n\r\nexport default ReduxRegistrationForm;","export const RegistrationMessage = (state) => {\r\n    return state.RegistrationReducer.RegistrationMessage\r\n};\r\n\r\nexport const RegistrationStatus = (state) => {\r\n    return state.RegistrationReducer.RegistrationStatus\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet state = (state) => ({status: state.RegistrationReducer.RegistrationStatus});\r\n\r\n\r\nexport const redirectInLogin = (Component) => {\r\n\r\n\r\n    class ComponentRedirect extends React.Component {\r\n        render() {\r\n            if (this.props.status) {\r\n                return <Redirect to={`/login`}/>;\r\n            } else {\r\n                return <Component {...this.props} />\r\n            }\r\n        }\r\n    }\r\n\r\n    let ComponentTo = connect(state)(ComponentRedirect);\r\n\r\n\r\n    return ComponentTo\r\n};\r\n","import React, {PureComponent} from 'react';\r\n\r\nimport ReduxRegistrationForm from \"./Registration\";\r\n\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {RegistrationThunk} from \"./RegistrationReducer\";\r\nimport {RegistrationMessage, RegistrationStatus} from \"../../user-selector/RegistrationSelector\";\r\nimport {redirectInLogin} from \"../../hoc/RegistrationOnLogin\";\r\n\r\n\r\nclass RegistrationCont extends PureComponent {\r\n\r\n    EntryForm = (formData) => {\r\n        formData.name=formData.name.match(/(\\w+)/gim);\r\n        console.log(formData);\r\n        this.props.RegistrationThunk(formData)\r\n    };\r\n    render() {\r\n        return <div>\r\n            <ReduxRegistrationForm onSubmit={this.EntryForm}\r\n                                   userEntry={this.props.userEntry}\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateTo = (state) => ({\r\n    message: RegistrationMessage(state)\r\n    , status: RegistrationStatus(state)\r\n});\r\nexport default compose(redirectInLogin, connect(mapStateTo, {RegistrationThunk}))(RegistrationCont)\r\n\r\n\r\n","import React from 'react';\nimport ContentCont from \"./Content/ContentCont\";\nimport {Route} from \"react-router\";\nimport LoginCont from \"./Content/Login/LoginCont\";\nimport RegistrationCont from \"./Content/Registration/RegistrationCont\";\n\nlet App=()=> {\n    return <div className={'base'}>\n                <div>\n                    <Route path='/login' render={() => <LoginCont/>}/>\n                    <Route path='/registration' render={() => <RegistrationCont/>}/>\n                </div>\n                <div>\n                    <ContentCont/>\n                </div>\n    </div>\n};\nexport default App","import  * as serviceWorker from './serviceWorker'\n\nimport store from './reduxStore.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from './App';\n\nReactDOM.render(\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>, document.getElementById('root')\n);\nserviceWorker.unregister();\n\n\n\n\n\n\n\n\n\n\n","import React from 'react'\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet StateTo = (state) => ({state: state.LoginReducer});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RediComp extends React.Component {\r\n\r\n        render() {\r\n            return (\r\n                this.props.state.status\r\n                    ? <Component {...this.props} />\r\n                    : <Redirect to={`/login`}/>\r\n            )\r\n        }\r\n    }\r\n\r\n    let ConnectedAuth = connect(StateTo)(RediComp);\r\n\r\n    return ConnectedAuth\r\n};\r\n\r\n","import loaD from \"./pic/829.svg\";\r\nimport React from \"react\";\r\n\r\nlet LoAd = () => {\r\n    return <div id={'place-loading'}>\r\n                <div className={'Loading'}>\r\n                    <img src={loaD} alt={'PIC'}/>\r\n                </div>\r\n    </div>\r\n}\r\nexport default LoAd;","import {UserProfitAPI} from \"../../api/api\";\r\n\r\nlet profileState = {\r\n    status: false\r\n    , message: 'Profile not entry'\r\n    , loading: false\r\n\r\n\r\n};\r\n//#####################################################################\r\nconst ProfileReducer = (state = profileState, action) => {\r\n    switch (action.type) {\r\n//##############################################\r\n        case \"SET-PROFILE\"  :\r\n            return {\r\n                ...state\r\n                , status: action.profile.status\r\n                , message: action.profile.mess\r\n\r\n                , profileNickname: action.profile.Profile.Nickname\r\n                , profilePhoto: action.profile.Profile.Photo.origin!==''\r\n                                                        ?action.profile.Profile.Photo.origin\r\n                                                        :action.profile.Profile.Photo.default\r\n                , profilePhotoMin: action.profile.Profile.PhotoMin.origin!==''\r\n                    ?action.profile.Profile.PhotoMin.origin\r\n                    :action.profile.Profile.PhotoMin.default\r\n\r\n                , profileStatus: action.profile.Profile.Status\r\n                , profileLocation: action.profile.Profile.Location\r\n                , profileAge: action.profile.Profile.Age\r\n                , profileSkills: action.profile.Profile.Skills\r\n                , profileTags: action.profile.Profile.Tags\r\n                , profileGender: action.profile.Profile.Gender\r\n            };\r\n        case 'LOADING'      :\r\n            return {\r\n                ...state\r\n                , loading: action.loading\r\n            };\r\n//#################################################\r\n            case \"EDIT-INFO\"  :\r\n            return {\r\n                ...state\r\n                , profileNickname: action.inform.nickname\r\n                , profilePhoto: action.inform.photo\r\n                , profileStatus: action.inform.status\r\n                , profileLocation: action.inform.location\r\n                , profileAge: action.inform.age\r\n                , profileSkills: action.inform.skills\r\n                , profileTags: action.inform.tags\r\n                , profileGender: action.inform.gender\r\n            };\r\n//#################################################\r\n        default             :\r\n            return state\r\n    }\r\n};\r\n\r\n//$$$$$$___Action for ComponentDid Mount or ComponentDidUpdate____$$$$$\r\nexport let SettingProfile = (profile) => ({type: \"SET-PROFILE\", profile});\r\nexport let Loading = (loading) => ({type: 'LOADING', loading});\r\n//$$$$$$___Action for changing state____$$$$$\r\nexport const EditInform = (inform) => ({type: \"EDIT-INFO\", inform});\r\n//####################################################################################################\r\n\r\n//$$$$$$___Thunk for send on Server____$$$$$\r\nexport const GetProfileFromServer = (id) => async (dispatch) => {\r\n        let data = await UserProfitAPI.getProfileFromServer(id);\r\n    if (data) {\r\n        dispatch(SettingProfile(data));\r\n    }\r\n    return true\r\n    };//поолучить пользователя\r\n\r\nexport const sendInformation = (inform) => async (dispatch) => {\r\n    debugger\r\n        let data=await UserProfitAPI.sendInformation(inform);\r\n    if(data){\r\n        debugger\r\n        dispatch(EditInform(inform));\r\n    }\r\n\r\n\r\n    };//изменить статус\r\n\r\n//####################################################################################################\r\nexport default ProfileReducer;\r\n","import {UserMessageAPI} from \"../../api/api\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nlet message = {\r\n    Message:{ListMessage:[],AvaParty:'',NameParty:[]}\r\n    ,Friend:[]\r\n    ,Party:[]\r\n    ,loading: false\r\n};\r\n//#####################################################################\r\nconst MessageReducer = (state = message, action) => {\r\n    switch (action.type) {\r\n//##############################################\r\n        case \"SET-FRIEND\"  : debugger\r\n            return {\r\n                ...state\r\n                , Friend: action.friend.Friend\r\n            };\r\n        case \"SET-PARTY\"  : debugger\r\n            return {\r\n                ...state\r\n                , Party: action.friend.Party\r\n            };\r\n        case \"SET-MESSAGE\"  : debugger\r\n            return {\r\n                ...state\r\n                , Message: action.message\r\n            };\r\n\r\n        case 'LOADING'      :\r\n            return {\r\n                ...state\r\n                , loading: action.loading\r\n            };\r\n//#################################################\r\n        case \"PUSH-MESSAGE\" : debugger\r\n\r\n            return {\r\n                ...state\r\n                ,Message: {... state.Message, ListMessage:[...state.Message.ListMessage,{\r\n                        user: action.message.user\r\n                        , text: action.message.text\r\n                        , img:action.message.img\r\n                        ,date:action.message.date}\r\n                        ]\r\n                }\r\n            };\r\n        case \"DELETED-MESSAGE\" : debugger\r\n            for(let i=0;i<action.deleted.list.length;i++){\r\n                let r=state.Party.findIndex(r=>r._id===action.deleted.list[i]);\r\n                state.Party.splice(r,r+1)\r\n            }\r\n            return {\r\n                ...state\r\n            };\r\n//#################################################\r\n        default             :\r\n            return state\r\n    }\r\n};\r\n//#####################################################################\r\n//Action for ComponentDid Mount or ComponentDidUpdate\r\nexport let SetMessage = (message) => ({type: \"SET-MESSAGE\", message});\r\nexport let SetFriend = (friend) => ({type: \"SET-FRIEND\", friend});\r\nexport let SetParty = (friend) => ({type: \"SET-PARTY\", friend});\r\nexport let Loading = (loading) => ({type: 'LOADING', loading});\r\n//############################################################################\r\n//Action for changing state\r\nexport const pushMessage = (message) => ({type: \"PUSH-MESSAGE\", message});\r\nexport const deleteParty = (deleted) => ({type: \"DELETED-MESSAGE\", deleted});\r\n//############################################################################\r\nexport const GetListMessages = (profile) => async (dispatch) => {\r\n    debugger\r\n    if(profile.id) {\r\n        dispatch(Loading(true));\r\n        let data = await UserMessageAPI.messageListMessage(profile);\r\n        if (data) {\r\n            debugger\r\n            Cookies.set('message', profile);\r\n            dispatch(SetMessage(data));\r\n            dispatch(Loading(false));\r\n        }\r\n    }\r\n};//получить список сообщений\r\nexport const GetListFriend = () => async (dispatch) => {\r\n    dispatch(Loading(true));\r\n    let data = await UserMessageAPI.messageListFriend();\r\n    if (data) {\r\n        dispatch(SetFriend(data));\r\n        dispatch(Loading(false));\r\n    }\r\n};//получить список друзей\r\nexport const GetListParty = () => async (dispatch) => {\r\n    dispatch(Loading(true));\r\n    let data = await UserMessageAPI.messageListParty();\r\n    if (data) {\r\n        dispatch(SetParty(data));\r\n        dispatch(Loading(false));\r\n    }\r\n};//получить список друзей\r\n\r\nexport const SendMessage = (profile) => async (dispatch) => {\r\n    dispatch(Loading(true));\r\n    let data = await UserMessageAPI.SendMessage(profile);\r\n    if (data) {\r\n        dispatch(pushMessage(profile));\r\n        dispatch(Loading(false));\r\n    }\r\n};//отправить сообщение\r\nexport const SendSetting = (setting) => async (dispatch) => {\r\n    let data=await UserMessageAPI.SendSetting(setting);\r\n    data && dispatch(deleteParty(setting))\r\n\r\n};//отправить сообщение\r\n//####################################################################################################\r\nexport default MessageReducer;\r\n"],"sourceRoot":""}