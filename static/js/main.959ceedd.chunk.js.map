{"version":3,"sources":["Content/Profile/ProfileReducer.js","Content/Messages/MessageReducer.js","Content/People/PeopleReducer.js","api/api.js","conponent/pic/829.svg","serviceWorker.js","Content/Login/LoginReducer.js","Content/Registration/RegistrationReducer.js","reduxStore.js","Header/MenuB.js","Header/Logo.jsx","utils/validator/validator.js","Header/MenuHeader.js","Content/ContentCont.js","conponent/FormsControll/FormsControll.js","Content/Login/Login.js","hoc/step2redirectInProfiles.js","Content/Login/LoginCont.js","Content/Registration/Registration.js","user-selector/RegistrationSelector.js","Content/Registration/Protected.js","Content/Registration/RegistrationCont.js","App.js","index.js","user-selector/LoginSelector.js","hoc/withAuthRedirect.js","conponent/load.js"],"names":["profileState","status","message","loading","EditInform","inform","type","GetProfileFromServer","id","dispatch","a","UserProfitAPI","getProfileFromServer","data","profile","sendInformation","ProfileReducer","state","action","mess","profileNickname","Profile","Nickname","profilePhoto","Photo","origin","default","profilePhotoMin","PhotoMin","profileStatus","Status","profileLocation","Location","profileAge","Age","profileSkills","Skills","profileTags","Tags","profileGender","Gender","nickname","photo","location","age","skills","tags","gender","timerId","Message","ListMessage","AvaParty","NameParty","Friend","Party","list","Loading","SetMessage","pushMessage","deleteParty","deleted","addProfile","GetListMessages","Async","clearTimeout","timer","request","d","window","setTimeout","UserMessageAPI","messageListMessage","Cookies","set","console","log","GetListFriend","messageListFriend","friend","GetListParty","messageListParty","SendMessage","myElement","document","getElementById","scrollTop","scrollHeight","SendSetting","setting","MessageReducer","user","text","img","date","i","r","findIndex","_id","splice","length","people","SetPeople","SetCurrent","current","GetUser","page","UserSubAPI","getPeople","FollowPeople","subScribe","follow","PeopleReducer","f","filter","friendStatus","instance","axios","create","withCredentials","baseURL","UserAppAPI","exit","get","then","response","registration","form","post","Login","login","Password","password","name","potected","key","UserLoginAPI","getUserFromServer","sendUserFormServer","value","module","exports","Boolean","hostname","match","loginization","String","Object","SettingUserDispatch","Exit","LoginReducer","RegistrationStatus","RegistrationMessage","RegAuthorization","AuthorizationDispatch","RegistrationThunk","FormRegistration","RegistrationReducer","reducers","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","connect","props","className","to","src","onClick","Logo","maxLength","MenuHeader","ProfileCont","lazy","MessageCont","PeopleCont","peo","withAuthRedirect","Content","fallback","path","render","pass","copy","complexity","required","minLengthCreator","minLength","undefined","email","test","userEntry","Input","input","meta","error","touched","minLength6","ReduxLoginForm","reduxForm","onSubmit","handleSubmit","Field","component","placeholder","validate","redirectInProfiles","Component","ComponentRedirect","History","localStorage","this","Dialog","React","userStatus","getLoginUser","getUserEntry","GetUserFromServer","SendUserFormForServer","formData","stopSubmit","_error","useEffect","maxLength16","ReduxRegistrationForm","haveKey","RegistrationStatusAuthorization","statusA","SendKeyAuthorization","useState","setKey","but","setBut","onChange","target","statusREG","HaveKeyDispatch","App","ReactDOM","navigator","serviceWorker","ready","unregister","getLoading","StateTo","RediComp","LoAd","loaD","alt"],"mappings":"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","file":"static/js/main.959ceedd.chunk.js","sourcesContent":["import {UserProfitAPI} from \"../../api/api\";\r\n\r\nlet profileState = {\r\n    status: false\r\n    , message: 'Profile not entry'\r\n    , loading: false\r\n\r\n\r\n};\r\n//#####################################################################\r\nconst ProfileReducer = (state = profileState, action) => {\r\n    switch (action.type) {\r\n//##############################################\r\n        case \"SET-PROFILE\"  :\r\n            return {\r\n                ...state\r\n                , status: action.profile.status\r\n                , message: action.profile.mess\r\n\r\n                , profileNickname: action.profile.Profile.Nickname\r\n                , profilePhoto: action.profile.Profile.Photo.origin!==''\r\n                                                        ?action.profile.Profile.Photo.origin\r\n                                                        :action.profile.Profile.Photo.default\r\n                , profilePhotoMin: action.profile.Profile.PhotoMin.origin!==''\r\n                    ?action.profile.Profile.PhotoMin.origin\r\n                    :action.profile.Profile.PhotoMin.default\r\n\r\n                , profileStatus: action.profile.Profile.Status\r\n                , profileLocation: action.profile.Profile.Location\r\n                , profileAge: action.profile.Profile.Age\r\n                , profileSkills: action.profile.Profile.Skills\r\n                , profileTags: action.profile.Profile.Tags\r\n                , profileGender: action.profile.Profile.Gender\r\n            };\r\n        case 'LOADING'      :\r\n            return {\r\n                ...state\r\n                , loading: action.loading\r\n            };\r\n//#################################################\r\n            case \"EDIT-INFO\"  :\r\n            return {\r\n                ...state\r\n                , profileNickname: action.inform.nickname\r\n                , profilePhoto: action.inform.photo\r\n                , profileStatus: action.inform.status\r\n                , profileLocation: action.inform.location\r\n                , profileAge: action.inform.age\r\n                , profileSkills: action.inform.skills\r\n                , profileTags: action.inform.tags\r\n                , profileGender: action.inform.gender\r\n            };\r\n//#################################################\r\n        default             :\r\n            return state\r\n    }\r\n};\r\n\r\n//$$$$$$___Action for ComponentDid Mount or ComponentDidUpdate____$$$$$\r\nexport let SettingProfile = (profile) => ({type: \"SET-PROFILE\", profile});\r\nexport let Loading = (loading) => ({type: 'LOADING', loading});\r\n//$$$$$$___Action for changing state____$$$$$\r\nexport const EditInform = (inform) => ({type: \"EDIT-INFO\", inform});\r\n//####################################################################################################\r\n\r\n//$$$$$$___Thunk for send on Server____$$$$$\r\nexport const GetProfileFromServer = (id) => async (dispatch) => {\r\n        let data = await UserProfitAPI.getProfileFromServer(id);\r\n        data && dispatch(SettingProfile(data));\r\n};//поолучить пользователя\r\n\r\nexport const sendInformation = (inform) => async (dispatch) => {\r\n        let data=await UserProfitAPI.sendInformation(inform);\r\n        data && dispatch(EditInform(inform));\r\n};//изменить статус\r\n\r\n//####################################################################################################\r\nexport default ProfileReducer;\r\n","import {UserMessageAPI} from \"../../api/api\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nlet timerId\r\n\r\nlet message = {\r\n    Message:{ListMessage:[],AvaParty:'',NameParty:['']}\r\n    ,Friend:[]\r\n    ,Party:[]\r\n    ,Profile:{id:false,list:[]}\r\n    ,Loading:false\r\n};\r\n//#####################################################################\r\nconst MessageReducer = (state = message, action) => {\r\n    switch (action.type) {\r\n//##############################################\r\n        case \"SET-FRIEND\"  :\r\n            return {\r\n                ...state\r\n                , Friend: action.friend.Friend\r\n            };\r\n        case \"SET-PARTY\"  :\r\n            return {\r\n                ...state\r\n                , Party: action.friend.Party\r\n            };\r\n        case \"SET-MESSAGE\"  :\r\n            return {\r\n                ...state\r\n                , Message: action.message\r\n            };\r\n//#################################################\r\n        case \"PUSH-MESSAGE\" :\r\n            return {\r\n                ...state\r\n                ,Message: {... state.Message, ListMessage:[...state.Message.ListMessage,{\r\n                        user: action.message.user\r\n                        , text: action.message.text\r\n                        , img:action.message.img\r\n                        ,date:action.message.date}\r\n                        ]\r\n                }\r\n            };\r\n        case \"DELETED-MESSAGE\" :\r\n            for(let i=0;i<action.deleted.list.length;i++){\r\n                let r=state.Party.findIndex(r=>r._id===action.deleted.list[i]);\r\n                state.Party.splice(r,r+1)\r\n            }\r\n            return {\r\n                ...state\r\n            };\r\n        case \"PROFILE\":\r\n            return {\r\n              ...state\r\n              , Profile:action.profile\r\n            };\r\n        case 'LOADING':\r\n            return {\r\n                ...state\r\n                ,Loading:action.loading\r\n            }\r\n//#################################################\r\n        default             :\r\n            return state\r\n    }\r\n};\r\n//#####################################################################\r\n//Action for ComponentDid Mount or ComponentDidUpdate\r\nexport let SetMessage = (message) => ({type: \"SET-MESSAGE\", message});\r\nexport let SetFriend = (friend) => ({type: \"SET-FRIEND\", friend});\r\nexport let SetParty = (friend) => ({type: \"SET-PARTY\", friend});\r\nexport let setLoading = (loading) => ({type: \"LOADING\", loading});\r\n//############################################################################\r\n//Action for changing state\r\nexport const pushMessage = (message) => ({type: \"PUSH-MESSAGE\", message});\r\nexport const deleteParty = (deleted) => ({type: \"DELETED-MESSAGE\", deleted});\r\nexport const addProfile = (profile) => ({type: \"PROFILE\", profile});\r\n//############################################################################\r\nexport const GetListMessages = (profile) => async (dispatch) => {\r\n    if(profile.id) {\r\n        let timer=(profile)=>{\r\n            let d=1,request,data;\r\n                timerId = window.setTimeout(request= async () => {\r\n\r\n                    data = await UserMessageAPI.messageListMessage(profile);\r\n                    if (data) {\r\n                        Cookies.set('message', profile);\r\n                        dispatch(SetMessage(data));\r\n                    }\r\n                    d++;\r\n                    if (d < 3) {\r\n                        timerId = setTimeout(request, 20000)\r\n                    } else {\r\n                        clearTimeout(timerId)\r\n                        console.log('таймают чист')\r\n                    }\r\n                })\r\n        };\r\n\r\n        async function Async(){\r\n           await clearTimeout(timerId);\r\n           await timer(profile)\r\n        }\r\n        await Async();\r\n\r\n\r\n    }\r\n};//получить список сообщений\r\nexport const GetListFriend = () => async (dispatch) => {\r\n    let data = await UserMessageAPI.messageListFriend();\r\n    data && dispatch(SetFriend(data));\r\n};//получить список друзей\r\nexport const GetListParty = () => async (dispatch) => {\r\n    let data = await UserMessageAPI.messageListParty();\r\n    data && dispatch(SetParty(data));\r\n};//получить список друзей\r\n\r\nexport const SendMessage = (profile) => async (dispatch) => {\r\n    let data = await UserMessageAPI.SendMessage(profile);\r\n    data && dispatch(pushMessage(profile));\r\n\r\n    setTimeout(()=>{\r\n        let myElement =  document.getElementById('mess');\r\n        myElement.scrollTop=myElement.scrollHeight\r\n\r\n    },1);\r\n\r\n};//отправить сообщение\r\nexport const SendSetting = (setting) => async (dispatch) => {\r\n    let data=await UserMessageAPI.SendSetting(setting);\r\n    data && dispatch(deleteParty(setting))\r\n};//отправить сообщение\r\n//####################################################################################################\r\nexport default MessageReducer;\r\n","import {UserSubAPI} from \"../../api/api\";\r\n\r\nlet people = {\r\n    loading: false\r\n    ,people:[]\r\n};\r\n//#####################################################################\r\nconst PeopleReducer = (state = people, action) => {\r\n    switch (action.type) {\r\n//##############################################\r\n        case \"GET-USERS\"    :\r\n            return {\r\n                ...state\r\n                , people: action.people.people\r\n            };\r\n        case \"FOLLOW-PEOPLE\"    :\r\n            let f=state.people.filter(r=>r._id===action.follow);\r\n                f[0].friendStatus? f[0].friendStatus=false:f[0].friendStatus=true;\r\n            return {\r\n                ...state\r\n            };\r\n        case 'LOADING'      :\r\n            return {\r\n                ...state\r\n                , loading: action.loading\r\n            };\r\n        case 'CURRENT'      :\r\n            return {\r\n                ...state\r\n                , current: action.current\r\n            };\r\n//#################################################\r\n        default             :\r\n            return state\r\n    }\r\n};\r\n//#####################################################################\r\n//Action for ComponentDid Mount or ComponentDidUpdate\r\nexport let SetPeople = (people) => ({type: \"GET-USERS\", people});\r\nexport let Loading = (loading) => ({type: 'LOADING', loading});\r\nexport let SetCurrent = (current) => ({type: 'CURRENT', current});\r\n//############################################################################\r\n//Action for changing state\r\nexport const followPeople = (follow) => ({type: \"FOLLOW-PEOPLE\", follow});\r\n//####################################################################################################\r\nexport const GetUser = (page) => async (dispatch) => {\r\n    let data = await UserSubAPI.getPeople(page);\r\n    data && dispatch(SetPeople(data));\r\n};\r\nexport const FollowPeople = (friend) => async (dispatch) => {\r\n    let data = await UserSubAPI.subScribe(friend);\r\n    data && dispatch(followPeople(friend));\r\n};\r\n//####################################################################################################\r\nexport default PeopleReducer;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://express-kuku.herokuapp.com/',\r\n    // headers:{'KEY FOR CONNECTED WITH SERVER':\"12312-12312-SDF-34SDF2\"}\r\n});\r\n//_____________________________________________________________________________________\r\nexport const UserAppAPI = {\r\n\r\n    exit() {\r\n        return instance.get('exit').then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    registration(form) {\r\n        return instance.post('registration', {\r\n            Login: form.login,\r\n            Password: form.password,\r\n            Nickname: form.name\r\n        }).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    potected(key) {\r\n        debugger\r\n        return instance.post('protection', {key}).then(response => {\r\n            debugger\r\n            return response.data\r\n        })\r\n    }\r\n};\r\n//__________________________________________________________________________________\r\nexport const UserLoginAPI = {\r\n    getUserFromServer() {\r\n        return instance.get('login').then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    sendUserFormServer(value) {\r\n        return instance.post('login', {Login:value.login, Password:value.password}).then(response => {\r\n            return response.data\r\n        })\r\n    }\r\n};\r\n//___________________________________________________________________________________\r\nexport const UserProfitAPI = {\r\n\r\n    getProfileFromServer(profile) {\r\n        return instance.get(`profile/${profile}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    sendInformation(inform){\r\n        return instance.post(`update/info`, {inform})\r\n    }\r\n\r\n};\r\n//_____________________________________________________________________________________\r\nexport const UserMessageAPI = {\r\n    messageListFriend() {\r\n        return instance.get(`message/friend`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    messageListParty() {\r\n        return instance.get(`message/party`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    messageListMessage({id,list}) {\r\n        return instance.post(`message/list`,{id,list}).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    SendMessage(profile) {\r\n        return instance.post(`message/send`, {profile}).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    SendSetting(setting) {\r\n        return instance.post(`message/setting`, {setting}).then(response => {\r\n            return response.data\r\n        })\r\n    }\r\n};\r\n//_____________________________________________________________________________________\r\nexport const UserSubAPI = {\r\n    getPeople({tags,nickname,list}) {\r\n        return instance.post('people',{tags,nickname,list}).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    subScribe(friend) {\r\n        return instance.post('subscribe', {id: friend}).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n};\r\n//_____________________________________________________________________________________\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/829.14706964.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {UserAppAPI, UserLoginAPI} from \"../../api/api\";\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nlet loginization = {\r\n    status: false\r\n    , message: String\r\n    , user: Object\r\n};\r\n//#####################################################################\r\nconst LoginReducer = (state = loginization, action) => {\r\n    switch (action.type) {\r\n//##############################################\r\n        case 'SET-LOGIN':\r\n            return {\r\n                ...state\r\n                , status: action.user.status\r\n                , message: action.user.message\r\n                , user: action.user._id\r\n            };\r\n        case 'DEL-USER':\r\n            return {\r\n                ...state\r\n                , status: false\r\n                , message: String\r\n                , user: Object\r\n            };\r\n//#################################################\r\n        default             :\r\n            return {\r\n                ...state\r\n            };\r\n    }\r\n};\r\n//#####################################################################\r\nexport let SettingUserDispatch = (user) => ({type: 'SET-LOGIN', user});\r\nexport let DeletedUserDispatch = () => ({type: 'DEL-USER'});\r\n//############################################################################\r\nexport const GetUserFromServer = () =>\r\n    async (dispatch) => {\r\n        let data = await UserLoginAPI.getUserFromServer();\r\n    data ? dispatch(SettingUserDispatch(data))\r\n         : dispatch(DeletedUserDispatch());\r\n};//получить пользователя из куков\r\nexport const SendUserFormForServer = (formData) => async (dispatch) => {\r\n    let data = await UserLoginAPI.sendUserFormServer(formData);\r\n    data ? dispatch(SettingUserDispatch(data))\r\n         : dispatch(stopSubmit('login', {_error: data.mess}))\r\n};//войти с помощью пароля и логин\r\nexport const Exit = () => (dispatch) => {\r\n    UserAppAPI.exit().then(data => {\r\n        data && dispatch(DeletedUserDispatch());\r\n    })\r\n};//очистить стейт и удалить куки о пользователе\r\n//####################################################################################################\r\nexport default LoginReducer;\r\n","import {UserAppAPI} from \"../../api/api\";\r\n\r\nlet status = {\r\n    RegistrationStatus: false\r\n    , RegistrationMessage: ''\r\n\r\n    , RegAuthorization: false\r\n}\r\n//#####################################################################\r\n// eslint-disable-next-line no-unused-vars\r\nconst RegistrationReducer = (state = status, action) => {\r\n     switch (action.type) {\r\n        case 'REGISTRATION-STATUS':\r\n            return {\r\n                ...state\r\n                , RegistrationStatus: action.registration.status\r\n                , RegistrationMessage: action.registration.mess\r\n            };\r\n        case 'AUTHORIZATION' : debugger\r\n            return {\r\n                ...state\r\n                , RegAuthorization: action.status.status\r\n            };\r\n        case 'STATUS' :\r\n            return {\r\n                ...state\r\n                , RegistrationStatus: !state.RegistrationStatus\r\n            };\r\n        default :\r\n            return {\r\n                ...state\r\n            }\r\n\r\n    }\r\n};\r\n//#####################################################################\r\n//Action for ComponentDid Mount or ComponentDidUpdate\r\nexport let RegistrationDispatch = (registration) => ({type: 'REGISTRATION-STATUS', registration});\r\nexport let AuthorizationDispatch = (status) => ({type: 'AUTHORIZATION', status});\r\nexport let HaveKeyDispatch = () => ({type: 'STATUS'});\r\n//############################################################################\r\n//Thunk for send on Server\r\nexport const RegistrationThunk = (FormRegistration) => (dispatch) =>{\r\n        UserAppAPI.registration(FormRegistration).then(data => {\r\n            data.status && dispatch(RegistrationDispatch(data))\r\n        })\r\n};\r\nexport const SendKeyAuthorization = (key) =>(dispatch)=>{\r\n    UserAppAPI.potected(key).then(data => {\r\n        debugger\r\n        data.status && dispatch(AuthorizationDispatch(data))\r\n    })\r\n};\r\n\r\n//####################################################################################################\r\nexport default RegistrationReducer;\r\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nimport LoginReducer from \"./Content/Login/LoginReducer\";\r\nimport RegistrationReducer from \"./Content/Registration/RegistrationReducer\";\r\nimport ProfileReducer from \"./Content/Profile/ProfileReducer\";\r\nimport MessageReducer from \"./Content/Messages/MessageReducer\";\r\nimport PeopleReducer from \"./Content/People/PeopleReducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    LoginReducer: LoginReducer,\r\n    RegistrationReducer: RegistrationReducer,\r\n\r\n    ProfileReducer: ProfileReducer,\r\n    MessageReducer: MessageReducer,\r\n    PeopleReducer: PeopleReducer,\r\n\r\n    form: formReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n\r\n\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {Exit} from \"../Content/Login/LoginReducer\";\r\nimport './style/style.css';\r\n\r\nlet Menu = (props) => {\r\n    function exit() {\r\n        props.Exit()\r\n    }\r\n\r\n    return (\r\n        <div className=\"Menu\">\r\n            <div><NavLink to='/profile' className=\"Button_item\">Моя Страница </NavLink></div>\r\n            <div><NavLink to=\"/message\" className=\"Button_item\">Сообщения </NavLink></div>\r\n            <div><NavLink to='/people' className=\"Button_item\">Пользователи </NavLink></div>\r\n            <div><img src={'https://upload.wikimedia.org/wikipedia/commons/thumb/8/89/ISO_7010_E002_%2B_arrow_1.svg/240px-ISO_7010_E002_%2B_arrow_1.svg.png'}\r\n                      onClick={exit}\r\n                      className={'exit'}\r\n            /></div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateTo = (state) => ({state: state.LoginReducer,});\r\nexport default compose(\r\n    connect(mapStateTo, {Exit}\r\n    )\r\n)(Menu)","import React from 'react';\r\nimport '../style/App.css';\r\n\r\nfunction Logo() {\r\n    return  <div className={'Logo'}>\r\n\r\n            </div>\r\n\r\n}\r\n\r\nexport default Logo","//Это проверка, совпадает ли введеное пользователлем с требованиям к \"логину и паролю\"\r\n\r\n//проверка---это поле является обязательны после\r\n// клика он запоминает, при уходе он проверит заполнили ли вы его\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nlet d;\r\n\r\nexport const pass = (value) => {\r\n    d=value\r\n};\r\nexport const copy = (value) => {\r\n    if (value === d) return undefined;\r\n    return 'passwords don\\'t match'\r\n}\r\n\r\nexport const complexity =(value)=>{\r\n    if (\r\n        value\r\n\r\n\r\n    ) return undefined\r\n    return 'It`s password wrong '\r\n}\r\n\r\nexport const required = (value) => {\r\n\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n};\r\n\r\n//Это устанавливает проверку на максимальную длину записанного\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    return (\r\n        value && value.length > maxLength\r\n            ? `Max length is ${maxLength} symbols`\r\n            : undefined\r\n    )\r\n};\r\n\r\n//Это устанавливает проверку на минимальную длину записанного\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    return (\r\n        value && value.length < minLength ? `Min length is ${minLength} symbols` : undefined\r\n    )\r\n};\r\n\r\n// //Провека. Число ли это?\r\n// const number = (value) =>\r\n//     value && isNaN(Number(value)) ? 'Must be a number' : undefined\r\n//\r\n//\r\n// // меньше ли чем минимальное значение\r\n// const minValue = min => value =>\r\n//     value && value < min ? `Must be at least ${min}` : undefined\r\n// const minValue13 = minValue(13)\r\n//\r\n// //проверка на правильность заполнения МЫЛА\r\nexport const email = (value) => {\r\n    if (value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n        return 'Invalid email address'\r\n    }else { return undefined\r\n    }\r\n\r\n};\r\n//\r\n// // меньше чем допустимый вызраст\r\n// const tooYoung = value =>\r\n//     value && value < 13\r\n//         ? 'You do not meet the minimum age requirement!'\r\n//         : undefined\r\n//\r\n// // меньше чем допустимый вызраст\r\n// const aol = value =>\r\n//     value && /.+@aol\\.com/.test(value)\r\n//         ? 'Really? You still use AOL for your email?'\r\n//         : undefined\r\n//\r\n//\r\n// // Только арифметические знаки\r\n// const alphaNumeric = value =>\r\n//     value && /[^a-zA-Z0-9 ]/i.test(value)\r\n//         ? 'Only alphanumeric characters'\r\n//         : undefined\r\n//\r\n// // номер телефона 10 символов\r\n// export const phoneNumber = value =>\r\n//     value && !/^(0|[1-9][0-9]{9})$/i.test(value)\r\n//         ? 'Invalid phone number, must be 10 digits'\r\n//         : undefined\r\n//\r\n// let r = {number, minValue13, email, tooYoung, aol, alphaNumeric, phoneNumber}\r\n\r\n\r\nconst mapStateTo = (state) => ({\r\n    userEntry: state.LoginReducer.userEntry\r\n});\r\nexport default compose(connect(mapStateTo, null))(email)\r\n","import Menu from \"./MenuB\";\r\nimport React from \"react\";\r\nimport Logo from \"./Logo\";\r\n\r\nlet MenuHeader = () => {\r\n    return <div className={'Header'}>\r\n                <Logo />\r\n                <Menu/>\r\n           </div>\r\n\r\n}\r\nexport default MenuHeader","import React, {Suspense, lazy} from 'react'\r\nimport {Route} from \"react-router\";\r\nimport MenuHeader from \"../Header/MenuHeader\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport LoAd from \"../conponent/load\";\r\nimport {getLoading, getLoginUser, getUserEntry} from \"../user-selector/LoginSelector\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst ProfileCont = lazy(() => import ('./Profile/ProfileCont'));\r\nconst MessageCont = lazy(() => import(\"./Messages/MessageCont\"));\r\nconst PeopleCont = lazy(() => import(\"./People/PeopleCont\"));\r\n\r\nlet ContentCont = (props) => {\r\n    return <div className={'cont_Section'}>\r\n        {props.log && props.mess && props.peo && <div><LoAd/></div>}\r\n        {!props.log && !props.mess && !props.peo && <div><MenuHeader/></div>}\r\n        {!props.log && !props.mess && !props.peo && <div> <Content/></div>}\r\n           </div>\r\n};\r\n\r\nconst mapStateTo = (state) => ({\r\n    log: state.LoginReducer.loading\r\n    , mess:  state.MessageReducer.loading\r\n    , peo:  state.PeopleReducer.loading\r\n});\r\n\r\nexport default compose( connect(mapStateTo),withAuthRedirect )(ContentCont)\r\n\r\n\r\nlet Content = () => {\r\n    return <Suspense fallback={'.... чу херня происходит, давай подождем'}>\r\n        <div>\r\n            <Route path='/profile/:profile?' render={() =><ProfileCont/>}/>\r\n            <Route path='/message/:profile?' render={() => <MessageCont/>}/>\r\n            <Route path='/people' render={() =><PeopleCont/>}/>\r\n        </div>\r\n    </Suspense>\r\n};\r\n","import React from 'react'\r\nimport \"./style.css\"\r\n\r\nexport const Input = ({input, meta, value, ...props}) => {\r\n    const error = meta.touched && meta.error;\r\n    return (\r\n        <div>\r\n            <div>\r\n                <input {...input} {...props} className={error && \"formControl\"}/>\r\n            </div>\r\n            {error && <span className={'formSpan'}>{meta.error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const errore = meta.touched && meta.error;\r\n    return (\r\n        <div>\r\n            <div className={errore && \"formControl\"}>\r\n                <textarea {...input} {...props} wrap=\"soft\" rows={'1'} readOnly={'readOnly'} />\r\n            </div>\r\n            {errore && <span>{errore}</span>}\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {minLengthCreator, required} from \"../../utils/validator/validator\";\r\nimport {Input} from \"../../conponent/FormsControll/FormsControll\";\r\nimport \"./../../conponent/FormsControll/style.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst minLength6 = minLengthCreator(6);\r\n\r\nlet Login = (props) => {\r\n    return <div className={'login_Section'}>\r\n        <div className={'desc-log'}>\r\n                <h1 className={'log'}>LOGIN</h1>\r\n                <div>Entry Your Login & Password, please</div>\r\n        </div>\r\n        <form onSubmit={props.handleSubmit} className={'field-log'}>\r\n            <div><Field required\r\n                        name={'login'}\r\n                        component={Input}\r\n                        placeholder={'Login'}\r\n                        validate={[required, minLength6]}/>\r\n            </div>\r\n            <div><Field required\r\n                        placeholder={'Password'}\r\n                        component={Input}\r\n                        name={'password'}\r\n                        type={'password'}\r\n                        validate={[required, minLength6]}/>\r\n            </div>\r\n            {/*<div><Field component={'input'}*/}\r\n            {/*            type={'checkbox'}*/}\r\n            {/*            name={'rememberMe'}*/}\r\n            {/*            validate={[]}/>Remember me*/}\r\n            {/*</div>*/}\r\n            {props.error && <div className={'errorEmaOrPass'}>{props.error} Это хуйня, давай заново </div>}\r\n            <div className=\"but-log-reg\">\r\n                <div className={'but-prot-item'}><button value=\"Enter\" id={'ent-but'}>Enter</button></div>\r\n                <div className={'but-prot-item'}><NavLink to='/registration' id={'as'}>Registration </NavLink></div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </form>\r\n    </div>\r\n}\r\nconst ReduxLoginForm = reduxForm({form: 'login'})(Login);\r\n\r\nexport default ReduxLoginForm;","import React from 'react'\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst redirectInProfiles = (Component) => {\r\n\r\n    let state = (state) => ({state: state.LoginReducer, userStatus: state.ProfileReducer.status});\r\n\r\n    class ComponentRedirect extends React.Component {\r\n        state={\r\n        History :  localStorage.History\r\n    };\r\n        render() {\r\n            if (this.props.state.status) {\r\n                switch (History) {\r\n                    case 'profile' :\r\n                        return <Redirect to={`/profile/${this.state.Profile}`}/>;\r\n                    case 'message' :\r\n                        return <Redirect to={`/message/${this.state.Dialog}`}/>;\r\n                    case 'people' :\r\n                        return <Redirect to={`/people`}/>;\r\n                    default  :\r\n                        return <Redirect to={`/profile`}/>;\r\n                }\r\n            } else {\r\n                return <Component {...this.props} />\r\n            }\r\n        }\r\n    }\r\n    return connect(state)(ComponentRedirect)\r\n};\r\nexport default redirectInProfiles","import React, {useEffect} from 'react';\r\n\r\nimport ReduxLoginForm from \"./Login\";\r\n\r\nimport './style/style.css';\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport redirectInProfiles from \"../../hoc/step2redirectInProfiles\";\r\nimport {Exit, GetUserFromServer, SendUserFormForServer} from \"./LoginReducer\";\r\nimport {getLoginUser, getUserEntry} from \"../../user-selector/LoginSelector\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nlet  LoginCont=(props)=>{\r\n\r\n    useEffect(()=> {\r\n        props.GetUserFromServer()\r\n    },[]);\r\n\r\n    let EntryForm = (formData) => {\r\n        props.SendUserFormForServer(formData)\r\n        Cookies.set('History', 'profile')\r\n    };\r\n\r\n    return (\r\n            <div className={'entry_Section'}>\r\n                  <ReduxLoginForm onSubmit={EntryForm}  />\r\n            </div>\r\n    )\r\n};\r\nconst mapStateTo = (state) => ({\r\n    user: getLoginUser(state)\r\n    , userEntry: getUserEntry(state)\r\n});\r\nexport default compose(connect(mapStateTo, {\r\n    Exit,\r\n    GetUserFromServer,\r\n    SendUserFormForServer\r\n}), redirectInProfiles)(LoginCont)\r\n\r\n\r\n","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {\r\n    complexity,\r\n    copy,\r\n    email,\r\n    maxLengthCreator,\r\n    minLengthCreator,\r\n    pass,\r\n    required\r\n} from \"../../utils/validator/validator\";\r\nimport {Input} from \"../../conponent/FormsControll/FormsControll\";\r\nimport \"./../../conponent/FormsControll/style.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst maxLength16 = maxLengthCreator(16)\r\nconst minLength6 = minLengthCreator(6)\r\n\r\nlet Registration = (props) => {\r\n    const {handleSubmit} = props;\r\n    return <div className={'reg_Section'}>\r\n        <h1 className={'text-regi'}>REGISTRATION</h1>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <div>Nickname</div>\r\n                <Field component={Input}\r\n                       placeholder={'You`r Name'}\r\n                       name={'name'}\r\n                       validate={[required, minLength6, maxLength16]}/>\r\n            </div>\r\n\r\n            <div>\r\n                <div>Login</div>\r\n                <Field required\r\n                       name={'login'}\r\n                       component={Input}\r\n                       placeholder={'Login'}\r\n                       validate={[email,required, minLength6]}/>\r\n            </div>\r\n            <div>\r\n                <div>Password</div>\r\n                <Field required\r\n                       placeholder={'Password'}\r\n                       component={Input}\r\n                       name={'repeat-password'}\r\n                       type=\"password\"\r\n                       validate={[ complexity,pass,required, minLength6, maxLength16]}/>\r\n\r\n                <div>Repeat the password</div>\r\n                <Field required\r\n                       placeholder={'Password'}\r\n                       component={Input}\r\n                       type=\"password\"\r\n                       name={'password'}\r\n                       validate={[copy,required, minLength6, maxLength16]}/>\r\n            </div>\r\n\r\n            {props.error && <div className={'errorEmaOrPass'}>{props.error} Это хуйня, давай заново </div>}\r\n            <div className={'but-prot'}>\r\n                <div className={'but-prot-item'}> <button value=\"Enter\" id={'ent-but'}  >Enter</button> </div>\r\n                <div onClick={props.haveKey} className={'but-prot-item'}>You have a key </div>\r\n                <div className={'but-prot-item'}> <NavLink to='/login' id={'a'}>Go back to Login</NavLink></div>\r\n            </div>\r\n\r\n        </form>\r\n    </div>\r\n};\r\nconst ReduxRegistrationForm = reduxForm({form: 'registration'})(Registration);\r\n\r\nexport default ReduxRegistrationForm;","export const RegistrationMessage = (state) => {\r\n    return state.RegistrationReducer.RegistrationMessage\r\n};\r\n\r\nexport const RegistrationStatus = (state) => {\r\n    return state.RegistrationReducer.RegistrationStatus\r\n};\r\n\r\nexport const RegistrationStatusAuthorization = (state) => {\r\n    return state.RegistrationReducer.RegAuthorization\r\n};\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\n\r\nimport './style/style.css';\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {AuthorizationDispatch, RegistrationThunk, SendKeyAuthorization} from \"./RegistrationReducer\";\r\nimport {RegistrationStatusAuthorization} from \"../../user-selector/RegistrationSelector\";\r\nimport {redirectInLogin} from \"../../hoc/RegistrationOnLogin\";\r\nimport {Redirect} from \"react-router\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Protected = props => {\r\n    debugger\r\n    let [key, setKey]=useState(\"\");\r\n    let [but, setBut]=useState(false);\r\n\r\n    let set=(value)=>{\r\n        setKey(value.target.value)\r\n    };\r\n    let send=()=>{\r\n        setKey('');\r\n        setBut(!but);\r\n        props.SendKeyAuthorization(key)\r\n    };\r\n    let d=()=>{\r\n        setBut(!but);\r\n        window.location = '/app-on-react/#/login'\r\n    };\r\n\r\n\r\n    return <div className={'prot'}>\r\n        <h1 >KEY</h1>\r\n        <div className={'prot-text'}>Field for the key code</div>\r\n            <input value={key} onChange={set} className={'inpu-prot'} />\r\n\r\n        {but && <div>Redirect to login in 4 seconds</div>}\r\n\r\n        {\r\n            props.statusA\r\n            && <div className={'dis'}>{\r\n                setTimeout(()=>d(),4000)\r\n            }</div>\r\n        }\r\n\r\n            <div className={'but-prot'}>\r\n                <div className={'but-prot-item'} onClick={()=>send()}>Enter</div>\r\n                <div className={'but-prot-item'} onClick={()=>props.haveKey()}>Come Back Authorization</div>\r\n                <div className={'but-prot-item'} ><NavLink to='/login' onClick={()=>props.haveKey()} id={'a'}>Go back to your Login</NavLink></div>\r\n            </div>\r\n\r\n    </div>\r\n};\r\n\r\nconst mapStateTo = (state) => ({\r\n    statusA: RegistrationStatusAuthorization(state)\r\n});\r\nexport default compose( connect(mapStateTo, {RegistrationThunk,SendKeyAuthorization}))(Protected)\r\n\r\n// redirectInLogin\r\n","import React, {PureComponent} from 'react';\r\n\r\nimport ReduxRegistrationForm from \"./Registration\";\r\nimport './style/style.css';\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {AuthorizationDispatch, HaveKeyDispatch, RegistrationThunk} from \"./RegistrationReducer\";\r\nimport {RegistrationMessage, RegistrationStatus} from \"../../user-selector/RegistrationSelector\";\r\nimport {redirectInLogin} from \"../../hoc/RegistrationOnLogin\";\r\nimport Protected from \"./Protected\";\r\nimport {Redirect, Route} from \"react-router\";\r\n\r\n\r\nlet RegistrationCont =(props)=> {\r\n\r\n    let EntryForm = (formData) => {\r\n        debugger\r\n        formData.name=formData.name.match(/(\\w+)/gim);\r\n        props.RegistrationThunk(formData);\r\n        return <Redirect to={`/protected`}/>;\r\n    };\r\n\r\n    let haveKey=()=>{props.HaveKeyDispatch()};\r\n\r\n    return <div>\r\n\r\n           {props.statusREG && <Protected  haveKey={haveKey} />}\r\n           {!props.statusREG && <ReduxRegistrationForm\r\n               onSubmit={EntryForm}\r\n               userEntry={props.userEntry}\r\n               haveKey={haveKey}\r\n            />}\r\n        </div>\r\n}\r\n\r\nconst mapStateTo = (state) => ({\r\n    message: RegistrationMessage(state)\r\n    , statusREG: RegistrationStatus(state)\r\n});\r\nexport default compose(connect(mapStateTo, {RegistrationThunk,HaveKeyDispatch,AuthorizationDispatch}))(RegistrationCont)\r\n\r\n// redirectInLogin\r\n","import React from 'react';\nimport ContentCont from \"./Content/ContentCont\";\nimport {Route} from \"react-router\";\nimport LoginCont from \"./Content/Login/LoginCont\";\nimport RegistrationCont from \"./Content/Registration/RegistrationCont\";\nimport './style/App.css';\n\nlet App=()=> {\n    return <div className={'base'}>\n                <div>\n                    <Route path='/login' render={() => <LoginCont/>}/>\n                    <Route path='/registration' render={() => <RegistrationCont/>}/>\n                </div>\n                <div>\n                    <ContentCont/>\n                </div>\n    </div>\n};\nexport default App","import  * as serviceWorker from './serviceWorker'\n\nimport store from './reduxStore.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {HashRouter} from \"react-router-dom\";\nimport App from './App';\n\nReactDOM.render(\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>, document.getElementById('root')\n);\nserviceWorker.unregister();\n\n\n//BrowserRouter basename={process.env.PUBLIC_URL}\n\n\n\n\n\n\n\n","export const getLoginUser = (state) => {\r\n    return state.LoginReducer.user\r\n};\r\nexport const getUserEntry = (state) => {\r\n    return state.LoginReducer.userEntry\r\n};\r\nexport const getLoading = (state) => {\r\n    return state.LoginReducer.loading\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet StateTo = (state) => ({state: state.LoginReducer});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RediComp extends React.Component {\r\n\r\n        render() {\r\n            return (\r\n                this.props.state.status\r\n                    ? <Component {...this.props} />\r\n                    : <Redirect to={`/login`}/>\r\n            )\r\n        }\r\n    }\r\n\r\n    let ConnectedAuth = connect(StateTo)(RediComp);\r\n\r\n    return ConnectedAuth\r\n};\r\n\r\n","import loaD from \"./pic/829.svg\";\r\nimport React from \"react\";\r\n\r\nlet LoAd = () => {\r\n    return <div id={'place-loading'}>\r\n                <div className={'Loading'}>\r\n                    <img src={loaD} alt={'PIC'}/>\r\n                </div>\r\n    </div>\r\n}\r\nexport default LoAd;"],"sourceRoot":""}