{"version":3,"sources":["conponent/FormsControll/FormsControll.js","utils/validator/validator.js","Content/Login/Login.js","hoc/step2redirectInProfiles.js","user-selector/LoginSelector.js","Content/Login/LoginCont.js"],"names":["Input","input","meta","props","value","error","touched","className","Textarea","errore","wrap","rows","min","required","maxLengthCreator","maxLength","length","undefined","minLengthCreator","minLength","email","zzzz","test","status","compose","connect","state","userEntry","LoginReducer","minLength1","Login","React","memo","onSubmit","handleSubmit","Field","name","component","placeholder","validate","type","ReduxLoginForm","reduxForm","form","getLoginUser","user","getUserEntry","getLoading","loading","LoginCont","formData","LoginSetUser","bind","this","LoginGetUser","prevProps","prevState","snapshot","PureComponent","Exit","Component","History","Cookies","get","Dialog","Profile","ComponentRedirect","to"],"mappings":"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","file":"static/js/7.db3cd872.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./style.css\"\r\n\r\nexport const Input=({input, meta,value,...props})=>{\r\n    const error=meta.touched && meta.error ;\r\n    return(\r\n        <div >\r\n            <div>\r\n                <input {...input} {...props} className={error && \"formControl\"} />\r\n            </div>\r\n            {error && <span className={'formSpan'} >{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea=({input,meta,...props})=>{\r\n    const errore=meta.touched && meta.error ;\r\n    return(\r\n        <div >\r\n            <div className={errore && \"formControl\"}>\r\n                <textarea {...input} {...props} wrap=\"soft\" rows={'1'}/>\r\n            </div>\r\n            {errore && <span>{errore}</span>}\r\n\r\n        </div>\r\n    )\r\n}","//Это проверка, совпадает ли введеное пользователлем с требованиям к \"логину и паролю\"\r\n\r\n//проверка---это поле является обязательны после\r\n// клика он запоминает, при уходе он проверит заполнили ли вы его\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const required=(value)=>{\r\n    if(value) return undefined\r\n    return 'Field is required'\r\n};\r\n\r\n//Это устанавливает проверку на максимальную длину записанного\r\nexport const maxLengthCreator=(maxLength)=>(value)=>{ return(\r\n        value && value.length > maxLength\r\n            ? `Max length is ${maxLength} symbols`\r\n            : undefined\r\n)\r\n};\r\n\r\n//Это устанавливает проверку на минимальную длину записанного\r\nexport const minLengthCreator=(minLength)=>(value)=>{ return(\r\n    value && value.length < minLength ? `Min length is ${minLength} symbols`: undefined\r\n)\r\n};\r\n\r\n//Провека. Число ли это?\r\nconst number = (value) =>\r\n    value && isNaN(Number(value)) ? 'Must be a number' : undefined\r\n\r\n\r\n// меньше ли чем минимальное значение\r\nconst minValue = min => value =>\r\n    value && value < min ? `Must be at least ${min}` : undefined\r\nconst minValue13 = minValue(13)\r\n\r\n//проверка на правильность заполнения МЫЛА\r\nexport const email =(zzzz)=> (value) => {\r\n    debugger\r\n    return(\r\n         value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n        ? 'Invalid email address'\r\n        : !zzzz.status?<span>Пароль или логин не правильный</span>:undefined\r\n)\r\n\r\n};\r\n\r\n// меньше чем допустимый вызраст\r\nconst tooYoung = value =>\r\n    value && value < 13\r\n        ? 'You do not meet the minimum age requirement!'\r\n        : undefined\r\n\r\n// меньше чем допустимый вызраст\r\nconst aol = value =>\r\n    value && /.+@aol\\.com/.test(value)\r\n        ? 'Really? You still use AOL for your email?'\r\n        : undefined\r\n\r\n\r\n// Только арифметические знаки\r\nconst alphaNumeric = value =>\r\n    value && /[^a-zA-Z0-9 ]/i.test(value)\r\n        ? 'Only alphanumeric characters'\r\n        : undefined\r\n\r\n// номер телефона 10 символов\r\nexport const phoneNumber = value =>\r\n    value && !/^(0|[1-9][0-9]{9})$/i.test(value)\r\n        ? 'Invalid phone number, must be 10 digits'\r\n        : undefined\r\n\r\nlet r={number,minValue13,email,tooYoung,aol,alphaNumeric,phoneNumber}\r\n\r\n\r\n\r\nconst mapStateTo=(state)=>({\r\n    userEntry: state.LoginReducer.userEntry\r\n});\r\nexport default compose( connect(mapStateTo, null))(email)\r\n","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {email, maxLengthCreator, minLengthCreator, required} from \"../../utils/validator/validator\";\r\nimport {Input} from \"../../conponent/FormsControll/FormsControll\";\r\nimport \"./../../conponent/FormsControll/style.css\"\r\n\r\nconst maxLength=maxLengthCreator(15)\r\nconst minLength6=minLengthCreator(6)\r\nconst minLength1=minLengthCreator(1)\r\n\r\n\r\nlet Login=React.memo(props=> {\r\n return(\r\n         <div>\r\n             <div>LOGIN</div>\r\n             <div>Entry Your Login & Password, please</div>\r\n               <form onSubmit={props.handleSubmit}>\r\n                   <div><Field   required\r\n                                name={'login'}\r\n                                component={Input}\r\n                                placeholder={'Login'}\r\n                                validate={[required,minLength1]}/>\r\n                   </div>\r\n                   <div><Field required\r\n                              placeholder={'Password'}\r\n                               component={Input}\r\n                              name={'password'}\r\n                               validate={[required,minLength1 ]}/>\r\n                   </div>\r\n                   <div><Field component={'input'}\r\n                                   type={'checkbox'}\r\n                                   name={'rememberMe'}\r\n                                   validate={[]}/>Remember me\r\n                   </div>\r\n                   {props.error && <div className={'errorEmaOrPass'}>{props.error} Это хуйня, давай заново    </div>}\r\n                   <div><button value=\"Enter\" >Enter</button></div>\r\n\r\n               </form>\r\n         </div>\r\n )\r\n});\r\nconst ReduxLoginForm =reduxForm({form:'login'})(Login);\r\n\r\nexport default ReduxLoginForm;","import React from 'react'\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nlet state=(state)=>( { state:state.LoginReducer } );\r\n\r\n\r\nexport const redirectInProfiles=(Component)=>{\r\nlet History=Cookies.get('History');\r\nlet Dialog =Cookies.get('message');\r\nlet Profile=Cookies.get('profile');\r\n    class ComponentRedirect extends React.Component{\r\n        render() {\r\n\r\n            if(this.props.state.userEntry.status ){\r\n                switch (History){\r\n                    case 'profile' :\r\n                        return <Redirect to={`/profile/${Profile}`}/>;\r\n                    case 'message' :\r\n                        return <Redirect to={`/message/${Dialog}`}/>;\r\n                    case 'subscribers' :\r\n                        return <Redirect to={`/subscribers`}/>;\r\n                    default  :\r\n                        return <Redirect to={`/profile`}/>;\r\n                }\r\n            }else{\r\n                return <Component {...this.props} />\r\n            }\r\n        }\r\n    }\r\n    let ComponentTo= connect(state)(ComponentRedirect);\r\n\r\n\r\n\r\n    return ComponentTo\r\n};\r\n","export const getLoginUser=(state)=>{\r\n    return  state.LoginReducer.user\r\n};\r\nexport const getUserEntry=(state)=>{\r\n    return  state.LoginReducer.userEntry\r\n};\r\nexport const getLoading=(state)=>{\r\n    return  state.LoginReducer.loading\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","import React, {PureComponent} from 'react';\r\n\r\nimport ReduxLoginForm from \"./Login\";\r\n\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {redirectInProfiles} from \"../../hoc/step2redirectInProfiles\";\r\nimport {Exit, LoginGetUser, LoginSetUser} from \"./LoginReducer\";\r\nimport {getLoading, getLoginUser, getUserEntry} from \"../../user-selector/LoginSelector\";\r\n\r\n\r\nclass LoginCont extends PureComponent {\r\n    constructor(props){\r\n        super(props);\r\n        this.onSubmit=this.onSubmit.bind(this)\r\n        this.state={\r\n                user:this.props.state.user\r\n                ,loading:this.props.loading\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.LoginGetUser()\r\n    };\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.state.user !== this.props.state.user) {\r\n            prevProps.state.user = this.props.state.user;\r\n        }\r\n        if (prevProps.state.loading !== this.props.state.loading) {\r\n            prevProps.state.loading = this.props.state.loading;\r\n        }\r\n    }\r\n\r\n    onSubmit=(formData)=>{\r\n        this.props.LoginSetUser(formData)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <ReduxLoginForm onSubmit={this.onSubmit}\r\n                                userEntry={this.props.userEntry}\r\n\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateTo=(state)=>({\r\n     user: getLoginUser(state)\r\n    ,userEntry: getUserEntry(state)\r\n    ,loading: getLoading(state)\r\n});\r\nexport default compose( connect(mapStateTo, {Exit,LoginSetUser,LoginGetUser}),redirectInProfiles )(LoginCont)\r\n\r\n\r\n"],"sourceRoot":""}