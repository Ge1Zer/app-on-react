{"version":3,"sources":["Content/People/People.js","user-selector/PeopleSelector.js","Content/People/PeopleMenu.js","Content/People/PeopleCont.js"],"names":["People","props","console","log","people","useState","current","SetCurrent","useEffect","fu","type","d","itsRename","className","onClick","length","map","z","key","_id","friendStatus","src","Description","PhotoMin","origin","default","alt","to","Nickname","e","join","id","Tags","Location","Count","City","getPeople","state","PeopleReducer","getCurrent","PeopleMenu","reName","action","target","name","value","nickname","onChange","placeholder","listTags","compose","connect","GetUser","FollowPeople","withAuthRedirect","SetListTags","SetNickname","tags","match","list"],"mappings":"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","file":"static/js/4.bd15f89e.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet People = (props) => {\r\n    console.log( props.people)\r\n    let [current,SetCurrent]=useState(props.current);\r\n\r\n    useEffect(()=>{\r\n        SetCurrent(props.current)\r\n    },[props.current])\r\n\r\n    let fu=(type)=>{\r\n        let d=current\r\n        type==='--' && d--;\r\n        type==='++' && d++;\r\n        props.itsRename('LIST',d)\r\n\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <div className={\"LIST_PAGE\"}>\r\n                <span onClick={()=>fu('--')} >{'< '}</span>\r\n                <span>{current} </span>\r\n                <span onClick={()=>fu('++')} >{'>'}</span>\r\n            </div>\r\n\r\n\r\n            <div >\r\n                {\r\n                    props.people.length===0\r\n                    ?()=>props.itsRename('LIST',current--)\r\n\r\n                    :props.people.map(z =>(\r\n                        <div key={z._id}>\r\n                            <div className='People-Item'>\r\n                                    {z.friendStatus\r\n\r\n                                            ? <img className=\"its-sub\"\r\n                                                    onClick={() => {\r\n                                                    props.itsRename('SUB',z._id)\r\n                                                }} src={z.Description.PhotoMin.origin!==''?z.Description.PhotoMin.origin:z.Description.PhotoMin.default} alt=\"Pic\"/>\r\n                                            : <img className=\"not-sub\"\r\n                                                    onClick={() => {\r\n                                                    props.itsRename('SUB',z._id)\r\n                                                }} src={z.Description.PhotoMin.origin!==''?z.Description.PhotoMin.origin:z.Description.PhotoMin.default} alt=\"Pic\"/>\r\n                                    }\r\n                                    <div className='People-Name'>\r\n                                        <div>\r\n                                            <div><NavLink to={'/profile/' + z._id} className={'Name-to'}>{z.Description.Nickname.map(e=>e).join(' ')}</NavLink></div>\r\n                                            {/*<div><NavLink to={'/profile/' + z._id} className={'Name-to'}>Я скажу так:\"{z.Description.Status}\"</NavLink></div>*/}\r\n                                            <div id={'row'}>{z.Description.Tags.map(z=><div> #{z}</div>)}</div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <div>{z.Description.Location.Count}</div>\r\n                                            <div>{z.Description.Location.City}</div>\r\n                                        </div>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default People;","export const getPeople = (state) => {\r\n    return state.PeopleReducer.people\r\n};\r\nexport const getCurrent = (state) => {\r\n    return state.PeopleReducer.current\r\n};\r\nexport const getLoadingPeople = (state) => {\r\n    return state.PeopleReducer.loading\r\n};\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport '../../style/App.css';\r\n\r\nlet PeopleMenu = props => {\r\n    let reName = (action) => {\r\n        props.itsRename(action.target.name, action.target.value);\r\n    };\r\n    return (\r\n        <div>\r\n            <span><input value={props.nickname}\r\n                         name={\"NICKNAME\"}\r\n                         onChange={reName}\r\n                         className={'width'}\r\n                         placeholder={'NAME через пробел если это несколько слов'}/>\r\n            </span>\r\n            <span><input value={props.listTags}\r\n                         name={\"TAGS\"}\r\n                         onChange={reName}\r\n                         className={'width'}\r\n                         placeholder={\"TAGS через пробел\"}/>\r\n            </span>\r\n            <img src={'https://1текстпесни.рф/uploads/images/t/o/j/toj_olsun_bajram_olsun_svadebnaja_2011.jpg'}\r\n                 onClick={() => props.itsRename('DOUBLE')} className={'img-but'}/>\r\n        </div>\r\n    )\r\n};\r\nexport default PeopleMenu;\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport './style/style.css';\r\nimport {connect} from 'react-redux';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport People from \"./People\";\r\nimport {FollowPeople, GetUser, SetCurrent} from \"./PeopleReducer\";\r\nimport {getCurrent, getPeople} from \"../../user-selector/PeopleSelector\";\r\nimport PeopleMenu from \"./PeopleMenu\";\r\n// import LoAd from \"../../conponent/load\";\r\n\r\nlet  PeopleCont=(props)=> {\r\n    let [listTags, SetListTags]=useState('');\r\n    let [nickname, SetNickname]=useState('');\r\n    let [current, SetCurrent]=useState(1);\r\n  useEffect(()=>{\r\n      props.GetUser({\r\n          tags: listTags.match(/(\\w+)/gim) || []\r\n          , nickname: nickname.match(/(\\w+)/gim) || []\r\n          , list: current\r\n      });\r\n  },[current]);\r\n    let itsRename=(name,value)=> {\r\n        switch (name) {\r\n            case \"NICKNAME\" :\r\n                return  SetNickname(value);\r\n            case \"TAGS\" :\r\n                return SetListTags(value);\r\n            case \"DOUBLE\":\r\n                return  props.GetUser({\r\n                    tags: listTags.match(/(\\w+)/gim) || []\r\n                    , nickname: nickname.match(/(\\w+)/gim) || []\r\n                    , list: current\r\n                });\r\n            case \"LIST\":\r\n                return SetCurrent(value);\r\n            case \"SUB\":\r\n                return props.FollowPeople(value);\r\n            default :\r\n                return 'Not Methods'\r\n        }\r\n    };\r\n        return <div className={\"peo_List\"}>\r\n                          <div className={'peo_List_Panel'}>\r\n                              <PeopleMenu itsRename={itsRename} listTags={listTags} nickname={nickname}/>\r\n                          </div>\r\n                          <div className={'peo_List_Peo'}>\r\n                              <People people={props.people} itsRename={itsRename} current={current}/>\r\n                          </div>\r\n               </div>\r\n};\r\nlet mapState = (state) => {\r\n    return {\r\n        people: getPeople(state)\r\n        ,current: getCurrent(state)\r\n    }\r\n};\r\nexport default compose(\r\n    connect(mapState, {SetCurrent,GetUser,FollowPeople})\r\n    , withAuthRedirect\r\n)(PeopleCont)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}