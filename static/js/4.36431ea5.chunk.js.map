{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Content/People/People.js","user-selector/PeopleSelector.js","Content/People/PeopleMenu.js","Content/People/PeopleCont.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","People","props","console","log","people","useState","current","SetCurrent","useEffect","fu","type","d","itsRename","className","onClick","map","z","key","_id","friendStatus","src","Description","PhotoMin","origin","default","alt","to","Nickname","e","join","id","Tags","Location","Count","City","getPeople","state","PeopleReducer","getCurrent","PeopleMenu","reName","action","target","name","nickname","onChange","placeholder","listTags","compose","connect","GetUser","FollowPeople","withAuthRedirect","SetListTags","SetNickname","tags","match","list"],"mappings":"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","file":"static/js/4.36431ea5.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useEffect, useState} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet People = (props) => {\r\n    console.log( props.people)\r\n    let [current,SetCurrent]=useState(props.current);\r\n\r\n    useEffect(()=>{\r\n        debugger\r\n        SetCurrent(props.current)\r\n    },[props.current])\r\n\r\n    debugger\r\n    let fu=(type)=>{\r\n        debugger\r\n        let d=current\r\n        type==='--' && d--;\r\n        type==='++' && d++;\r\n        props.itsRename('LIST',d)\r\n\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <div className={\"LIST_PAGE\"}>\r\n                <span onClick={()=>fu('--')} >{'< '}</span>\r\n                <span>{current} </span>\r\n                <span onClick={()=>fu('++')} >{'>'}</span>\r\n            </div>\r\n\r\n\r\n            <div >\r\n                {\r\n                    props.people.length===0\r\n                    ?()=>props.itsRename('LIST',current--)\r\n\r\n                    :props.people.map(z =>(\r\n                        <div key={z._id}>\r\n                            <div className='People-Item'>\r\n                                    {z.friendStatus\r\n\r\n                                            ? <img className=\"its-sub\"\r\n                                                    onClick={() => {\r\n                                                    props.itsRename('SUB',z._id)\r\n                                                }} src={z.Description.PhotoMin.origin!==''?z.Description.PhotoMin.origin:z.Description.PhotoMin.default} alt=\"Pic\"/>\r\n                                            : <img className=\"not-sub\"\r\n                                                    onClick={() => {\r\n                                                    props.itsRename('SUB',z._id)\r\n                                                }} src={z.Description.PhotoMin.origin!==''?z.Description.PhotoMin.origin:z.Description.PhotoMin.default} alt=\"Pic\"/>\r\n                                    }\r\n                                    <div className='People-Name'>\r\n                                        <div>\r\n                                            <div><NavLink to={'/profile/' + z._id} className={'Name-to'}>{z.Description.Nickname.map(e=>e).join(' ')}</NavLink></div>\r\n                                            {/*<div><NavLink to={'/profile/' + z._id} className={'Name-to'}>Я скажу так:\"{z.Description.Status}\"</NavLink></div>*/}\r\n                                            <div id={'row'}>{z.Description.Tags.map(z=><div> #{z}</div>)}</div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <div>{z.Description.Location.Count}</div>\r\n                                            <div>{z.Description.Location.City}</div>\r\n                                        </div>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default People;","export const getPeople = (state) => {\r\n    return state.PeopleReducer.people\r\n};\r\nexport const getCurrent = (state) => {\r\n    return state.PeopleReducer.current\r\n};\r\nexport const getLoadingPeople = (state) => {\r\n    return state.PeopleReducer.loading\r\n};\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport '../../style/App.css';\r\n\r\nlet PeopleMenu = props => {\r\n    let reName = (action) => {\r\n        props.itsRename(action.target.name, action.target.value);\r\n    };\r\n    return (\r\n        <div>\r\n            <span><input value={props.nickname}\r\n                         name={\"NICKNAME\"}\r\n                         onChange={reName}\r\n                         className={'width'}\r\n                         placeholder={'NAME через пробел если это несколько слов'}/>\r\n            </span>\r\n            <span><input value={props.listTags}\r\n                         name={\"TAGS\"}\r\n                         onChange={reName}\r\n                         className={'width'}\r\n                         placeholder={\"TAGS через пробел\"}/>\r\n            </span>\r\n            <img src={'https://1текстпесни.рф/uploads/images/t/o/j/toj_olsun_bajram_olsun_svadebnaja_2011.jpg'}\r\n                 onClick={() => props.itsRename('DOUBLE')} className={'img-but'}/>\r\n        </div>\r\n    )\r\n};\r\nexport default PeopleMenu;\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport './style/style.css';\r\nimport {connect} from 'react-redux';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport People from \"./People\";\r\nimport {FollowPeople, GetUser, SetCurrent} from \"./PeopleReducer\";\r\nimport {getCurrent, getPeople} from \"../../user-selector/PeopleSelector\";\r\nimport PeopleMenu from \"./PeopleMenu\";\r\n// import LoAd from \"../../conponent/load\";\r\n\r\nlet  PeopleCont=(props)=> {\r\n    let [listTags, SetListTags]=useState('');\r\n    let [nickname, SetNickname]=useState('');\r\n    let [current, SetCurrent]=useState(1);\r\n  useEffect(()=>{\r\n      props.GetUser({\r\n          tags: listTags.match(/(\\w+)/gim) || []\r\n          , nickname: nickname.match(/(\\w+)/gim) || []\r\n          , list: current\r\n      });\r\n  },[current]);\r\n    let itsRename=(name,value)=> {\r\n        switch (name) {\r\n            case \"NICKNAME\" :\r\n                return  SetNickname(value);\r\n            case \"TAGS\" :\r\n                return SetListTags(value);\r\n            case \"DOUBLE\":\r\n                return  props.GetUser({\r\n                    tags: listTags.match(/(\\w+)/gim) || []\r\n                    , nickname: nickname.match(/(\\w+)/gim) || []\r\n                    , list: current\r\n                });\r\n            case \"LIST\":\r\n                return SetCurrent(value);\r\n            case \"SUB\":\r\n                return props.FollowPeople(value);\r\n            default :\r\n                return 'Not Methods'\r\n        }\r\n    };\r\n        return <div className={\"peo_List\"}>\r\n                          <div className={'peo_List_Panel'}>\r\n                              <PeopleMenu itsRename={itsRename} listTags={listTags} nickname={nickname}/>\r\n                          </div>\r\n                          <div className={'peo_List_Peo'}>\r\n                              <People people={props.people} itsRename={itsRename} current={current}/>\r\n                          </div>\r\n               </div>\r\n};\r\nlet mapState = (state) => {\r\n    return {\r\n        people: getPeople(state)\r\n        ,current: getCurrent(state)\r\n    }\r\n};\r\nexport default compose(\r\n    connect(mapState, {SetCurrent,GetUser,FollowPeople})\r\n    , withAuthRedirect\r\n)(PeopleCont)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}